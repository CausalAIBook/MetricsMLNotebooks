name: Convert and Lint R Notebooks

on:
  push:
  schedule:
    - cron: '0 12 * * 0'  # Runs every Sunday at 12 PM UTC

concurrency:
  group: convert-lint-notebooks
  cancel-in-progress: true

jobs:
  set-vars:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      PM1_changed: ${{ steps.check_PM1.outputs.matched }}
      PM2_changed: ${{ steps.check_PM2.outputs.matched }}
      PM3_changed: ${{ steps.check_PM3.outputs.matched }}
      PM4_changed: ${{ steps.check_PM4.outputs.matched }}
      PM5_changed: ${{ steps.check_PM5.outputs.matched }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if PM1 files changed
        id: check_PM1
        uses: dorny/paths-filter@v2
        with:
          filters: |
            PM1:
              - 'PM1/*.irnb'
      - name: Check if PM2 files changed
        id: check_PM2
        uses: dorny/paths-filter@v2
        with:
          filters: |
            PM2:
              - 'PM2/*.irnb'
      - name: Check if PM3 files changed
        id: check_PM3
        uses: dorny/paths-filter@v2
        with:
          filters: |
            PM3:
              - 'PM3/*.irnb'
      - name: Check if PM4 files changed
        id: check_PM4
        uses: dorny/paths-filter@v2
        with:
          filters: |
            PM4:
              - 'PM4/*.irnb'
      - name: Check if PM5 files changed
        id: check_PM5
        uses: dorny/paths-filter@v2
        with:
          filters: |
            PM5:
              - 'PM5/*.irnb'

  determine-dirs:
    needs: [set-vars]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine directories to process
        id: determine
        run: |
          directories=$(jq -n \
            --arg pm1 ${{ needs.set-vars.outputs.PM1_changed }} \
            --arg pm2 ${{ needs.set-vars.outputs.PM2_changed }} \
            --arg pm3 ${{ needs.set-vars.outputs.PM3_changed }} \
            --arg pm4 ${{ needs.set-vars.outputs.PM4_changed }} \
            --arg pm5 ${{ needs.set-vars.outputs.PM5_changed }} \
            '[
              { "name": "PM1", "changed": $pm1 },
              { "name": "PM2", "changed": $pm2 },
              { "name": "PM3", "changed": $pm3 },
              { "name": "PM4", "changed": $pm4 },
              { "name": "PM5", "changed": $pm5 }
            ] | map(select(.changed == "true")) | map(.name)')
          echo "$directories" > directories.json

      - name: Upload directories json
        uses: actions/upload-artifact@v2
        with:
          name: directories-json
          path: directories.json

  convert-lint-notebooks:
    needs: [determine-dirs]
    runs-on: ubuntu-latest
    steps:
      - name: Download directories json
        uses: actions/download-artifact@v2
        with:
          name: directories-json
          path: directories.json

      - name: Load directories from json
        id: load-dirs
        run: |
          dirs=$(cat directories.json)
          echo "::set-output name=directories::$dirs"

      - name: Set up matrix
        id: matrix
        run: echo "::set-output name=matrix::{\"include\": $(cat directories.json)}"

      - name: Convert and lint notebooks
        runs-on: ubuntu-latest
        strategy:
          matrix: ${{ fromJson(steps.matrix.outputs.matrix) }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v2

          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.8'  # Specify your Python version here

          - name: Install nbstripout
            run: |
              python -m pip install --upgrade pip
              pip install nbstripout

          - name: Set up R
            uses: r-lib/actions/setup-r@v2

          - name: Install rmarkdown, knitr, and lintr packages
            run: |
              R -e 'install.packages(c("rmarkdown", "knitr", "lintr", "xfun"), repos="https://cloud.r-project.org")'

          - name: Strip outputs from .irnb files
            run: |
              for notebook in ${{ matrix.name }}/*.irnb; do
                ipynb_notebook="${notebook%.irnb}.ipynb"
                mv "$notebook" "$ipynb_notebook"
                nbstripout "$ipynb_notebook"
                mv "$ipynb_notebook" "$notebook"
              done

          - name: Convert .irnb to .Rmd and .R
            run: |
              R -e '
                files <- list.files(path = "${{ matrix.name }}", pattern = "\\.irnb$", full.names = TRUE, recursive = FALSE)
                lapply(files, function(input) {
                  rmarkdown::convert_ipynb(input)
                  rmd_file <- xfun::with_ext(input, "Rmd")
                  knitr::purl(rmd_file, output = xfun::with_ext(input, "R"))
                })
              '

          - name: Lint .Rmd files
            id: lint
            run: |
              R -e '
                library(lintr)
                linters <- with_defaults(line_length_linter = line_length_linter(120))
                rmd_files <- list.files(path = "${{ matrix.name }}", pattern = "\\.Rmd$", full.names = TRUE)
                resul

