{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"3.6.3"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"This notebook contains an example for teaching.","metadata":{}},{"cell_type":"markdown","source":"## Introduction","metadata":{}},{"cell_type":"markdown","source":"An important question in labour economics is what determines the wage of workers. This is a causal question, but we can begin to investigate it from a predictive perspective.\n\nIn the following wage example, $Y$ is the hourly wage of a worker and $X$ is a vector of worker's characteristics, e.g., education, experience, gender. Two main questions here are:\n\n* How can we use job-relevant characteristics, such as education and experience, to best predict wages?\n\n* What is the difference in predicted wages between men and women with the same job-relevant characteristics?\n\nIn this lab, we focus on the prediction question first.","metadata":{}},{"cell_type":"markdown","source":"## Data\n","metadata":{}},{"cell_type":"markdown","source":"The data set we consider is from the 2015 March Supplement of the U.S. Current Population Survey.  We select white non-hispanic individuals, aged 25 to 64 years, and working more than 35 hours per week for at least 50 weeks of the year. We exclude self-employed workers; individuals living in group quarters; individuals in the military, agricultural or private household sectors;  individuals with inconsistent reports on earnings and employment status; individuals with allocated or missing information in any of the variables used in the analysis; and individuals with hourly wage below $3$. \n\nThe variable of interest $Y$ is the hourly wage rate constructed as the ratio of the annual earnings to the total number of hours worked, which is constructed in turn as the product of number of weeks worked and the usual number of hours worked per week. In our analysis, we also focus on single (never married) workers. The final sample is of size $n=5150$.","metadata":{}},{"cell_type":"markdown","source":"## Data analysis","metadata":{}},{"cell_type":"markdown","source":"We start by loading the data set.","metadata":{}},{"cell_type":"code","source":"load(\"../input/wage2015-inference/wage2015_subsample_inference.Rdata\")\ndim(data)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:28:21.788603Z","iopub.execute_input":"2021-07-08T18:28:21.79079Z","iopub.status.idle":"2021-07-08T18:28:21.939468Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Let's have a look at the structure of the data.","metadata":{}},{"cell_type":"code","source":"str(data)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:28:21.942167Z","iopub.execute_input":"2021-07-08T18:28:21.974325Z","iopub.status.idle":"2021-07-08T18:28:22.011174Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We construct the output variable $Y$ and the matrix $Z$ which includes the characteristics of workers that are given in the data.","metadata":{}},{"cell_type":"code","source":"# construct matrices for estimation from the data \nY <- log(data$wage)\nn <- length(Y)\nZ <- data[-which(colnames(data) %in% c(\"wage\",\"lwage\"))]\np <- dim(Z)[2]\n\ncat(\"Number of observations:\", n, '\\n')\ncat( \"Number of raw regressors:\", p)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:28:22.013426Z","iopub.execute_input":"2021-07-08T18:28:22.014776Z","iopub.status.idle":"2021-07-08T18:28:22.038842Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"For the outcome variable *wage* and a subset of the raw regressors, we calculate the empirical mean to get familiar with the data.","metadata":{}},{"cell_type":"code","source":"# generate a table of means of variables \nlibrary(xtable) \nZ_subset <- data[which(colnames(data) %in% c(\"lwage\",\"sex\",\"shs\",\"hsg\",\"scl\",\"clg\",\"ad\",\"mw\",\"so\",\"we\",\"ne\",\"exp1\"))]\ntable <- matrix(0, 12, 1)\ntable[1:12,1]   <- as.numeric(lapply(Z_subset,mean))\nrownames(table) <- c(\"Log Wage\",\"Sex\",\"Some High School\",\"High School Graduate\",\"Some College\",\"College Graduate\", \"Advanced Degree\",\"Midwest\",\"South\",\"West\",\"Northeast\",\"Experience\")\ncolnames(table) <- c(\"Sample mean\")\ntab<- xtable(table, digits = 2)\ntab","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:32:13.181466Z","iopub.execute_input":"2021-07-08T18:32:13.188888Z","iopub.status.idle":"2021-07-08T18:32:13.25268Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"E.g., the share of female workers in our sample is ~44% ($sex=1$ if female).","metadata":{}},{"cell_type":"markdown","source":"Alternatively, using the xtable package, we can also print the table in LaTeX.","metadata":{}},{"cell_type":"code","source":"print(tab, type=\"latex\") # type=\"latex\" for printing table in LaTeX","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:32:52.154266Z","iopub.execute_input":"2021-07-08T18:32:52.156136Z","iopub.status.idle":"2021-07-08T18:32:52.177001Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Prediction Question","metadata":{}},{"cell_type":"markdown","source":"Now, we will construct a prediction rule for hourly wage $Y$, which depends linearly on job-relevant characteristics $X$:\n\n\\begin{equation}\\label{decompose}\nY = \\beta'X+ \\epsilon.\n\\end{equation}","metadata":{}},{"cell_type":"markdown","source":"Our goals are\n\n* Predict wages using various characteristics of workers.\n\n* Assess the predictive performance of a given model using the (adjusted) sample MSE, the (adjusted) sample $R^2$ and the out-of-sample MSE and $R^2$.\n\n\nWe employ two different specifications for prediction:\n\n\n1. Basic Model:   $X$ consists of a set of raw regressors (e.g. gender, experience, education indicators,  occupation and industry indicators and regional indicators).\n\n\n2. Flexible Model:  $X$ consists of all raw regressors from the basic model plus a dictionary of transformations (e.g., ${exp}^2$ and ${exp}^3$) and additional two-way interactions of a polynomial in experience with other regressors. An example of a regressor created through a two-way interaction is *experience* times the indicator of having a *college degree*.\n\nUsing the **Flexible Model** enables us to approximate the real relationship by a more complex regression model and therefore to reduce the bias. The **Flexible Model** increases the range of potential shapes of the estimated regression function. In general, flexible models often deliver higher prediction accuracy but are harder to interpret.","metadata":{}},{"cell_type":"markdown","source":"Now, let us fit both models to our data by running ordinary least squares (ols):","metadata":{}},{"cell_type":"code","source":"# 1. basic model\nbasic <- lwage~ (sex + exp1 + shs + hsg+ scl + clg + mw + so + we +occ2+ind2)\nregbasic <- lm(basic, data=data) # perform ols using the defined model\nregbasic # estimated coefficients\ncat( \"Number of regressors in the basic model:\",length(regbasic$coef), '\\n') # number of regressors in the Basic Model\n","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:37:37.891982Z","iopub.execute_input":"2021-07-08T18:37:37.895598Z","iopub.status.idle":"2021-07-08T18:37:37.976362Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Note that the basic model consists of $51$ regressors.","metadata":{}},{"cell_type":"code","source":"# 2. flexible model\nflex <- lwage ~ sex + shs+hsg+scl+clg+mw+so+we+occ2+ind2 + (exp1+exp2+exp3+exp4)*(shs+hsg+scl+clg+occ2+ind2+mw+so+we)\nregflex <- lm(flex, data=data)\nregflex # estimated coefficients\ncat( \"Number of regressors in the flexible model:\",length(regflex$coef)) # number of regressors in the Flexible Model\n","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:37:57.22358Z","iopub.execute_input":"2021-07-08T18:37:57.225554Z","iopub.status.idle":"2021-07-08T18:37:57.431288Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Note that the flexible model consists of $246$ regressors.","metadata":{}},{"cell_type":"markdown","source":"#### Re-estimating the flexible model using Lasso\nWe re-estimate the flexible model using Lasso (the least absolute shrinkage and selection operator) rather than ols. Lasso is a penalized regression method that can be used to reduce the complexity of a regression model when the ratio $p/n$ is not small. We will introduce this approach formally later in the course, but for now, we try it out here as a black-box method.  ","metadata":{}},{"cell_type":"code","source":"# Flexible model using Lasso\nlibrary(hdm)\nlassoreg<- rlasso(flex, data=data) \nsumlasso<- summary(lassoreg)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:52:56.57425Z","iopub.execute_input":"2021-07-08T18:52:56.575443Z","iopub.status.idle":"2021-07-08T18:53:02.824983Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Evaluating the predictive performance of the basic and flexible models\nNow, we can evaluate the performance of both models based on the (adjusted) $R^2_{sample}$ and the (adjusted) $MSE_{sample}$:","metadata":{}},{"cell_type":"code","source":"# Assess predictive performance\nsumbasic <- summary(regbasic)\nsumflex <- summary(regflex)\n\n# R-squared and adjusted R-squared\nR2.1 <- sumbasic$r.squared\ncat(\"R-squared for the basic model: \", R2.1, \"\\n\")\nR2.adj1 <- sumbasic$adj.r.squared\ncat(\"adjusted R-squared for the basic model: \", R2.adj1, \"\\n\")\n\nR2.2 <- sumflex$r.squared\ncat(\"R-squared for the flexible model: \", R2.2, \"\\n\")\nR2.adj2 <- sumflex$adj.r.squared\ncat(\"adjusted R-squared for the flexible model: \", R2.adj2, \"\\n\")\n\nR2.L <- sumlasso$r.squared\ncat(\"R-squared for the lasso with flexible model: \", R2.L, \"\\n\")\nR2.adjL <- sumlasso$adj.r.squared\ncat(\"adjusted R-squared for the flexible model: \", R2.L, \"\\n\")\n\n\n\n# MSE and adjusted MSE\nMSE1 <- mean(sumbasic$res^2)\ncat(\"MSE for the basic model: \", MSE1, \"\\n\")\np1 <- sumbasic$df[1] # number of regressors\nMSE.adj1 <- (n/(n-p1))*MSE1\ncat(\"adjusted MSE for the basic model: \", MSE.adj1, \"\\n\")\n\nMSE2 <-mean(sumflex$res^2)\ncat(\"MSE for the flexible model: \", MSE2, \"\\n\")\np2 <- sumflex$df[1]\nMSE.adj2 <- (n/(n-p2))*MSE2\ncat(\"adjusted MSE for the lasso flexible model: \", MSE.adj2, \"\\n\")\n\n\nMSEL <-mean(sumlasso$res^2)\ncat(\"MSE for the lasso flexible model: \", MSEL, \"\\n\")\npL <- length(sumlasso$coef)\nMSE.adjL <- (n/(n-pL))*MSEL\ncat(\"adjusted MSE for the lasso flexible model: \", MSE.adjL, \"\\n\")","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:40:36.165581Z","iopub.execute_input":"2021-07-08T18:40:36.167647Z","iopub.status.idle":"2021-07-08T18:40:36.313986Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Output the table\nlibrary(xtable)\ntable <- matrix(0, 3, 5)\ntable[1,1:5]   <- c(p1,R2.1,MSE1,R2.adj1,MSE.adj1)\ntable[2,1:5]   <- c(p2,R2.2,MSE2,R2.adj2,MSE.adj2)\ntable[3,1:5]   <- c(pL,R2.L,MSEL,R2.adjL,MSE.adjL)\ncolnames(table)<- c(\"p\",\"$R^2_{sample}$\",\"$MSE_{sample}$\",\"$R^2_{adjusted}$\", \"$MSE_{adjusted}$\")\nrownames(table)<- c(\"basic reg\",\"flexible reg\", \"lasso flex\")\ntab<- xtable(table, digits =c(0,0,2,2,2,2))\nprint(tab,type=\"latex\") \ntab","metadata":{"execution":{"iopub.status.busy":"2021-07-08T18:45:38.193447Z","iopub.execute_input":"2021-07-08T18:45:38.195503Z","iopub.status.idle":"2021-07-08T18:45:38.239301Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Considering the measures above, the flexible model performs slightly better than the basic model. \n\nAs $p/n$ is not large, the discrepancy between the adjusted and unadjusted measures is not large. However, if it were, we might still like to apply **data splitting** as a more general procedure to deal with potential overfitting if $p/n$. We illustrate the approach in the following.","metadata":{}},{"cell_type":"markdown","source":"## Data Splitting\n\nMeasure the prediction quality of the two models via data splitting:\n\n- Randomly split the data into one training sample and one testing sample. Here we just use a simple method (stratified splitting is a more sophisticated version of splitting that we might consider).\n- Use the training sample to estimate the parameters of the Basic Model and the Flexible Model.\n- Use the testing sample for evaluation. Predict the $\\mathtt{wage}$  of every observation in the testing sample based on the estimated parameters in the training sample.\n- Calculate the Mean Squared Prediction Error $MSE_{test}$ based on the testing sample for both prediction models. ","metadata":{}},{"cell_type":"code","source":"# splitting the data\nset.seed(1) # to make the results replicable (we will generate random numbers)\nrandom <- sample(1:n, floor(n*4/5))\n# draw (4/5)*n random numbers from 1 to n without replacing them\ntrain <- data[random,] # training sample\ntest <- data[-random,] # testing sample","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:29.63027Z","iopub.execute_input":"2021-07-08T19:09:29.631916Z","iopub.status.idle":"2021-07-08T19:09:29.652899Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# basic model\n# estimating the parameters in the training sample\nregbasic <- lm(basic, data=train)\n\n# calculating the out-of-sample MSE\ntrainregbasic <- predict(regbasic, newdata=test)\ny.test <- log(test$wage)\nMSE.test1 <- sum((y.test-trainregbasic)^2)/length(y.test)\nR2.test1<- 1- MSE.test1/var(y.test)\n\ncat(\"Test MSE for the basic model: \", MSE.test1, \" \")\n\ncat(\"Test R2 for the basic model: \", R2.test1)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:30.936688Z","iopub.execute_input":"2021-07-08T19:09:30.937619Z","iopub.status.idle":"2021-07-08T19:09:30.994861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In the basic model, the $MSE_{test}$ is quite close to the $MSE_{sample}$.","metadata":{}},{"cell_type":"code","source":"# flexible model\n# estimating the parameters\noptions(warn=-1) # ignore warnings \nregflex <- lm(flex, data=train)\n\n# calculating the out-of-sample MSE\ntrainregflex<- predict(regflex, newdata=test)\ny.test <- log(test$wage)\nMSE.test2 <- sum((y.test-trainregflex)^2)/length(y.test)\nR2.test2<- 1- MSE.test2/var(y.test)\n\ncat(\"Test MSE for the flexible model: \", MSE.test2, \" \")\n\ncat(\"Test R2 for the flexible model: \", R2.test2)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:33.397254Z","iopub.execute_input":"2021-07-08T19:09:33.398926Z","iopub.status.idle":"2021-07-08T19:09:33.540486Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In the flexible model too, the discrepancy between the $MSE_{test}$ and the $MSE_{sample}$ is not large.","metadata":{}},{"cell_type":"markdown","source":"It is worth noticing that the $MSE_{test}$ varies across different data splits. Hence, it is a good idea to average the out-of-sample MSE over different data splits to get valid results.\n\nNevertheless, we observe that, based on the out-of-sample $MSE$, the basic model using ols regression performs **about as well (or slightly better)** than the flexible model. \n\nNext, let us use lasso regression in the flexible model instead of ols regression. The out-of-sample $MSE$ on the test sample can be computed for any black-box prediction method, so we also compare the performance of lasso regression in the flexible model to ols regression.","metadata":{}},{"cell_type":"code","source":"# flexible model using lasso\nlibrary(hdm) # a library for high-dimensional metrics\nreglasso <- rlasso(flex, data=train, post=FALSE) # estimating the parameters\n\n# calculating the out-of-sample MSE\ntrainreglasso<- predict(reglasso, newdata=test)\nMSE.lasso <- sum((y.test-trainreglasso)^2)/length(y.test)\nR2.lasso<- 1- MSE.lasso/var(y.test)\n\ncat(\"Test MSE for the lasso on flexible model: \", MSE.lasso, \" \")\n\ncat(\"Test R2 for the lasso flexible model: \", R2.lasso)","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:35.618543Z","iopub.execute_input":"2021-07-08T19:09:35.619332Z","iopub.status.idle":"2021-07-08T19:09:37.560353Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Finally, let us summarize the results:","metadata":{}},{"cell_type":"code","source":"# Output the comparison table\ntable2 <- matrix(0, 3,2)\ntable2[1,1]   <- MSE.test1\ntable2[2,1]   <- MSE.test2\ntable2[3,1]   <- MSE.lasso\ntable2[1,2]   <- R2.test1\ntable2[2,2]   <- R2.test2\ntable2[3,2]   <- R2.lasso\n\nrownames(table2)<- c(\"basic reg\",\"flexible reg\",\"lasso regression\")\ncolnames(table2)<- c(\"$MSE_{test}$\", \"$R^2_{test}$\")\ntab2 <- xtable(table2, digits =3)\ntab2","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:39.761011Z","iopub.execute_input":"2021-07-08T19:09:39.762739Z","iopub.status.idle":"2021-07-08T19:09:39.795945Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(tab2,type=\"latex\")","metadata":{"execution":{"iopub.status.busy":"2021-07-08T19:09:42.229018Z","iopub.execute_input":"2021-07-08T19:09:42.230825Z","iopub.status.idle":"2021-07-08T19:09:42.245937Z"},"trusted":true},"execution_count":null,"outputs":[]}]}
