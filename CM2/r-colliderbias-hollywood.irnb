{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UqKC2AValFyz"
   },
   "source": [
    "# Collider Bias"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "52GxYF5-lFy1"
   },
   "source": [
    "Here is a simple mnemonic example to illustate the collider or M-bias.\n",
    "\n",
    "Here the idea is that people who get to Hollywood have to have high congenility = talent + beauty.  Funnily enough this induces a negative correlation between talents and looks, when we condition on the set of actors or celebrities.  This simple example explains an anecdotal observation that \"talent and beauty are negatively correlated\" for celebrities.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "HqSBY2MwlFy2",
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "install.packages(\"dagitty\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "library(dagitty)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "eITRXDGJlFy5",
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "causal_graph <- dagitty(\"dag{ Talent -> Congen <- Beauty }\")\n",
    "plot(causal_graph)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "id": "XrV8UFAOlFy5",
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "# collider bias\n",
    "n <- 1000000\n",
    "Talent <- rnorm(n) # talent\n",
    "Beauty <- rnorm(n) # beauty\n",
    "Congen <- Talent + Beauty + rnorm(n) # congeniality\n",
    "TalentH <- subset(Talent, Congen > 0) # condition on Congen>0\n",
    "BeautyH <- subset(Beauty, Congen > 0) # condition on Congen>0\n",
    "\n",
    "summary(lm(Talent ~ Beauty)) # regression of Talent on Beauty\n",
    "summary(lm(Talent ~ Beauty + Congen)) # regression of Talent on Beauty and Congen\n",
    "summary(lm(TalentH ~ BeautyH)) # regression of Talent on Beauty, conditional on Congen>0."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Y08MPHCClFy5"
   },
   "source": [
    "We can also use package Dagitty to illustrate collider bias, also known as M-bias."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "_cell_guid": "79c7e3d0-c299-4dcb-8224-4455121ee9b0",
    "_uuid": "d629ff2d2480ee46fbb7e2d37f6b5fab8052498a",
    "id": "B4vPm1JRlFy6",
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "## If we want to infer causal effect of Beauty on Talent,\n",
    "## we can apply the command to figure out\n",
    "## variables we should condition on:\n",
    "\n",
    "adjustmentSets(causal_graph, \"Talent\", \"Beauty\")\n",
    "\n",
    "## empty set -- we should not condition on the additional\n",
    "## variable Congen."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "vscode": {
     "languageId": "r"
    }
   },
   "outputs": [],
   "source": [
    "## Generate data where Congen = .5*Talent + .5*Beauty\n",
    "set.seed(123)\n",
    "data <- simulateSEM(causal_graph, .5)\n",
    "confint(lm(Talent ~ Beauty, data))[\"Beauty\", ]\n",
    "confint(lm(Talent ~ Beauty + Congen, data))[\"Beauty\", ]"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
