{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Mininimum Wage Example Notebook"
      ],
      "metadata": {
        "id": "2hwfuwbLTHgW"
      },
      "id": "2hwfuwbLTHgW"
    },
    {
      "cell_type": "markdown",
      "source": [
        "This notebook implements Difference-in-Differences in an application on\n",
        "the effect of minimum wage changes on teen employment. We use data from\n",
        "[Callaway\n",
        "(2022)](https://bcallaway11.github.io/files/Callaway-Chapter-2022/main.pdf),\n",
        "for further details on the analysis, please read his paper. The\n",
        "observations are US counties, with the outcome being county-level teen\n",
        "employment. Data was collected in a time period from 2001-2007 where the\n",
        "federal minimum wage was constant.\n",
        "\n",
        "Counties that have minimum wages above the federal minimum wage are\n",
        "classified as being treated. 27 Additional county characteristics come\n",
        "from IPUMS National Historical GIS (county population) and QCEW County\n",
        "Employment and Wages (county average annual pay) and will be used as\n",
        "covariates. The dataset ultimately includes a balanced panel of counties\n",
        "from 42 states from 2001-2007. See [Callaway and Sant’Anna\n",
        "(2021)](https://www.sciencedirect.com/science/article/abs/pii/S0304407620303948)\n",
        "for additional details on the data.\n",
        "\n",
        "First, we will load some libraries. (Note: The installation of the R packages might take up to 10 minutes)"
      ],
      "metadata": {
        "id": "jTsPJlxAQFo5"
      },
      "id": "jTsPJlxAQFo5"
    },
    {
      "cell_type": "code",
      "source": [
        "dependencies <- c(\"did\", \"BMisc\", \"fixest\", \"bacondecomp\", \"ggplot2\",\n",
        "                  \"modelsummary\", \"didimputation\", \"tidyr\", \"dplyr\",\n",
        "                  \"IRdisplay\")\n",
        "install.packages(dependencies)\n",
        "lapply(dependencies, library, character.only = TRUE)\n",
        "\n",
        "#remotes::install_github(\"asheshrambachan/HonestDiD\")\n",
        "#library(HonestDiD)\n",
        "\n",
        "options(warn=-1)\n",
        "set.seed(772023)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "id": "8NoeriMrTK_I",
        "outputId": "368975d2-1767-4320-f146-fae16b6d6510"
      },
      "id": "8NoeriMrTK_I",
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Installing packages into ‘/usr/local/lib/R/site-library’\n",
            "(as ‘lib’ is unspecified)\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<ol>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "\t<li><style>\n",
              ".list-inline {list-style: none; margin:0; padding: 0}\n",
              ".list-inline>li {display: inline-block}\n",
              ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
              "</style>\n",
              "<ol class=list-inline><li>'dplyr'</li><li>'tidyr'</li><li>'didimputation'</li><li>'data.table'</li><li>'modelsummary'</li><li>'ggplot2'</li><li>'bacondecomp'</li><li>'fixest'</li><li>'BMisc'</li><li>'did'</li><li>'stats'</li><li>'graphics'</li><li>'grDevices'</li><li>'utils'</li><li>'datasets'</li><li>'methods'</li><li>'base'</li></ol>\n",
              "</li>\n",
              "</ol>\n"
            ],
            "text/markdown": "1. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n2. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n3. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n4. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n5. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n6. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n7. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n8. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n9. 1. 'dplyr'\n2. 'tidyr'\n3. 'didimputation'\n4. 'data.table'\n5. 'modelsummary'\n6. 'ggplot2'\n7. 'bacondecomp'\n8. 'fixest'\n9. 'BMisc'\n10. 'did'\n11. 'stats'\n12. 'graphics'\n13. 'grDevices'\n14. 'utils'\n15. 'datasets'\n16. 'methods'\n17. 'base'\n\n\n\n\n\n",
            "text/latex": "\\begin{enumerate}\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\item \\begin{enumerate*}\n\\item 'dplyr'\n\\item 'tidyr'\n\\item 'didimputation'\n\\item 'data.table'\n\\item 'modelsummary'\n\\item 'ggplot2'\n\\item 'bacondecomp'\n\\item 'fixest'\n\\item 'BMisc'\n\\item 'did'\n\\item 'stats'\n\\item 'graphics'\n\\item 'grDevices'\n\\item 'utils'\n\\item 'datasets'\n\\item 'methods'\n\\item 'base'\n\\end{enumerate*}\n\n\\end{enumerate}\n",
            "text/plain": [
              "[[1]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[2]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[3]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[4]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[5]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[6]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[7]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[8]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n",
              "\n",
              "[[9]]\n",
              " [1] \"dplyr\"         \"tidyr\"         \"didimputation\" \"data.table\"   \n",
              " [5] \"modelsummary\"  \"ggplot2\"       \"bacondecomp\"   \"fixest\"       \n",
              " [9] \"BMisc\"         \"did\"           \"stats\"         \"graphics\"     \n",
              "[13] \"grDevices\"     \"utils\"         \"datasets\"      \"methods\"      \n",
              "[17] \"base\"         \n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We load the data which was preprocessed analogously to [Callaway\n",
        "(2022)](https://bcallaway11.github.io/files/Callaway-Chapter-2022/main.pdf)."
      ],
      "metadata": {
        "id": "UOlqVGvlQbCn"
      },
      "id": "UOlqVGvlQbCn"
    },
    {
      "cell_type": "code",
      "source": [
        "data <- read.csv(\"https://raw.githubusercontent.com/CausalAIBook/MetricsMLNotebooks/main/data/minwage_data.csv\", row.names=1)"
      ],
      "metadata": {
        "id": "ozWI5tv747ga"
      },
      "id": "ozWI5tv747ga",
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Summary Statistics**\n",
        "\n",
        "We are going to compare the groups of treated and untreated counties in\n",
        "some summary statistics. Treated refers to counties that had a minimum\n",
        "wage higher than the ferderal minimum wage in any period from 2002-2007.\n",
        "The comparison will be for 2001, as this is pre-treatment for all\n",
        "observations. It is evident, that counties in the treated group had\n",
        "already before treatment a significantly higher teen employment. Also,\n",
        "they tend to have higher population. The average pay shows no mayor\n",
        "deviation between treated and non-treated group. Counties that are not\n",
        "treated are more likely in region 3, which is the south. Meanwhile in\n",
        "region 1, referring to the northeast, there is not a single observation\n",
        "of a county without treatment."
      ],
      "metadata": {
        "id": "sy8NGlUo5CBr"
      },
      "id": "sy8NGlUo5CBr"
    },
    {
      "cell_type": "code",
      "source": [
        "library(knitr)"
      ],
      "metadata": {
        "id": "tM3p59lv-qmv"
      },
      "id": "tM3p59lv-qmv",
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data2 <- subset(data, (G==0) | (G>2001))\n",
        "data2$fever_treated <- as.factor(data2$ever_treated)\n",
        "data2$emp100 <- data2$emp0A01_BS/100\n",
        "data2$pop1000 <- data2$pop/1000\n",
        "data2$pay1000 <- data2$annual_avg_pay/1000\n",
        "datasummary_balance(~ fever_treated,\n",
        "                     data=dplyr::select(subset(data2,year==2001),\n",
        "                                       emp100,\n",
        "                                       pop1000,\n",
        "                                       pay1000,\n",
        "                                       region,\n",
        "                                       fever_treated),\n",
        "                    dinm=FALSE,\n",
        "                    output=\"jupyter\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 152
        },
        "id": "K5H4hXrq5HBX",
        "outputId": "a2aa8fa7-e24c-49e6-93c1-3e9032f3ebbb"
      },
      "id": "K5H4hXrq5HBX",
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n",
              " <thead>\n",
              "<tr>\n",
              "<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n",
              "<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">0 (N=1417)</div></th>\n",
              "<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">1 (N=1090)</div></th>\n",
              "</tr>\n",
              "  <tr>\n",
              "   <th style=\"text-align:left;\">   </th>\n",
              "   <th style=\"text-align:right;\"> Mean </th>\n",
              "   <th style=\"text-align:right;\"> Std. Dev. </th>\n",
              "   <th style=\"text-align:right;\"> Mean </th>\n",
              "   <th style=\"text-align:right;\"> Std. Dev. </th>\n",
              "  </tr>\n",
              " </thead>\n",
              "<tbody>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> emp100 </td>\n",
              "   <td style=\"text-align:right;\"> 9.0 </td>\n",
              "   <td style=\"text-align:right;\"> 28.8 </td>\n",
              "   <td style=\"text-align:right;\"> 20.1 </td>\n",
              "   <td style=\"text-align:right;\"> 48.1 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> pop1000 </td>\n",
              "   <td style=\"text-align:right;\"> 52.9 </td>\n",
              "   <td style=\"text-align:right;\"> 154.1 </td>\n",
              "   <td style=\"text-align:right;\"> 119.5 </td>\n",
              "   <td style=\"text-align:right;\"> 291.2 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> pay1000 </td>\n",
              "   <td style=\"text-align:right;\"> 24.8 </td>\n",
              "   <td style=\"text-align:right;\"> 5.2 </td>\n",
              "   <td style=\"text-align:right;\"> 26.9 </td>\n",
              "   <td style=\"text-align:right;\"> 5.9 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> region </td>\n",
              "   <td style=\"text-align:right;\"> 2.7 </td>\n",
              "   <td style=\"text-align:right;\"> 0.6 </td>\n",
              "   <td style=\"text-align:right;\"> 2.3 </td>\n",
              "   <td style=\"text-align:right;\"> 0.9 </td>\n",
              "  </tr>\n",
              "</tbody>\n",
              "</table>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pivot_table <- data2 %>%\n",
        "  group_by(region, ever_treated) %>%\n",
        "  summarise(emp100_count = n()) %>%\n",
        "  spread(ever_treated, emp100_count, fill = 0)\n",
        "row_sums <- rowSums(pivot_table[, c(\"0\", \"1\")])\n",
        "pivot_table$`0 (%)` <- pivot_table$`0` / row_sums * 100\n",
        "pivot_table$`1 (%)` <- pivot_table$`1` / row_sums * 100\n",
        "pivot_table"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 258
        },
        "id": "vwl4j-4TI4ob",
        "outputId": "ee6f0f8e-62d7-4c9f-814f-7ce0f03556fe"
      },
      "id": "vwl4j-4TI4ob",
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[1m\u001b[22m`summarise()` has grouped output by 'region'. You can override using the\n",
            "`.groups` argument.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A grouped_df: 4 × 5</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>region</th><th scope=col>0</th><th scope=col>1</th><th scope=col>0 (%)</th><th scope=col>1 (%)</th></tr>\n",
              "\t<tr><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>1</td><td>   0</td><td>1162</td><td> 0.00000</td><td>100.00000</td></tr>\n",
              "\t<tr><td>2</td><td>3472</td><td>3829</td><td>47.55513</td><td> 52.44487</td></tr>\n",
              "\t<tr><td>3</td><td>5733</td><td>1715</td><td>76.97368</td><td> 23.02632</td></tr>\n",
              "\t<tr><td>4</td><td> 714</td><td> 924</td><td>43.58974</td><td> 56.41026</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA grouped_df: 4 × 5\n\n| region &lt;int&gt; | 0 &lt;dbl&gt; | 1 &lt;dbl&gt; | 0 (%) &lt;dbl&gt; | 1 (%) &lt;dbl&gt; |\n|---|---|---|---|---|\n| 1 |    0 | 1162 |  0.00000 | 100.00000 |\n| 2 | 3472 | 3829 | 47.55513 |  52.44487 |\n| 3 | 5733 | 1715 | 76.97368 |  23.02632 |\n| 4 |  714 |  924 | 43.58974 |  56.41026 |\n\n",
            "text/latex": "A grouped\\_df: 4 × 5\n\\begin{tabular}{lllll}\n region & 0 & 1 & 0 (\\%) & 1 (\\%)\\\\\n <int> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t 1 &    0 & 1162 &  0.00000 & 100.00000\\\\\n\t 2 & 3472 & 3829 & 47.55513 &  52.44487\\\\\n\t 3 & 5733 & 1715 & 76.97368 &  23.02632\\\\\n\t 4 &  714 &  924 & 43.58974 &  56.41026\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  region 0    1    0 (%)    1 (%)    \n",
              "1 1         0 1162  0.00000 100.00000\n",
              "2 2      3472 3829 47.55513  52.44487\n",
              "3 3      5733 1715 76.97368  23.02632\n",
              "4 4       714  924 43.58974  56.41026"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Subsets of the data**\n",
        "\n",
        "The further analysis will run on different subsets of the data that we\n",
        "will discuss, namely:\n",
        "\n",
        "-   **Data 1**: Full data - uses all available states/counties and time\n",
        "    periods (2001-2007)\n",
        "\n",
        "-   **Data 2**: No already treated - drops states/counties that are\n",
        "    already treated at the beginning of the period\n",
        "\n",
        "-   **Data 3**: No never treated - drops states/counties that do not\n",
        "    participate in the treatment in any time period\n",
        "\n",
        "-   **Data 4**: No never treated and no already treated - drops\n",
        "    states/counties that are never-treated or that are already treated\n",
        "    at the beginning of the period (i.e., this only includes\n",
        "    observations that show up in both Data 2 and Data 3)\n",
        "\n",
        "-   **Data 5**: No early periods - drops states/counties that are\n",
        "    never-treated or that are already treated at the beginning of the\n",
        "    period and also only includes years from 2004-2007 (i.e., the subset\n",
        "    of Data 4 that only includes years from 2004-2007)."
      ],
      "metadata": {
        "id": "XPUSENI45MG2"
      },
      "id": "XPUSENI45MG2"
    },
    {
      "cell_type": "code",
      "source": [
        "# data 2 was already created above\n",
        "# drop never-treated\n",
        "data3 <- subset(data, G!=0)\n",
        "\n",
        "# additionally drop always-treated\n",
        "data4 <- subset(data3, G > 2001)\n",
        "\n",
        "# drop years 2004 or earlier\n",
        "data5 <- subset(data4, year > 2004)"
      ],
      "metadata": {
        "id": "dM9egVPZ5UnY"
      },
      "id": "dM9egVPZ5UnY",
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Group-Time Average Treatment Effect**\n",
        "\n",
        "We use the `did` package to estimate the average treatment effect on the\n",
        "treated in different time periods, compared to the group of\n",
        "never-treated. The package implements the group-time average treatment\n",
        "effect estimator of [Callaway and Sant’Anna\n",
        "(2021)](https://www.sciencedirect.com/science/article/abs/pii/S0304407620303948)."
      ],
      "metadata": {
        "id": "zvq3qCA45Z7P"
      },
      "id": "zvq3qCA45Z7P"
    },
    {
      "cell_type": "code",
      "source": [
        "cs_res <- att_gt(yname=\"lemp\",\n",
        "                 tname=\"year\",\n",
        "                 idname=\"countyreal\",\n",
        "                 gname=\"G\",\n",
        "                 data=data2,\n",
        "                 base_period =\"varying\",\n",
        "                 control_group=\"nevertreated\",\n",
        "                 cband=FALSE)\n",
        "ggdid(cs_res, ylim=c(-.18,.12), ncol=2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 437
        },
        "id": "g09P7Ie85iPa",
        "outputId": "1aa3f548-f3c7-4d8b-e650-979f1866c8ea"
      },
      "id": "g09P7Ie85iPa",
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "plot without title"
            ],
            "image/png": "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\n0jNnzvjHf/PNNw8NDfk0/va3vy0t9R3H/c6//OTndTU+jd/73vcefPBBn8a9e/f+/Oc/92nc\nsmXLK6+84tNYX1//ta99zacxNTX1wIED/qGuXr3af7zEBx98kJ7u+zzH9u3bfQYtdI1PVP7j\nP5Hfrdh//dd/3bNnj0/jAw888PTTT/s0fvzxx88884xP45IlS/xXHxkZufHGG/3jP3XqlNzv\nWci77767u9v3Wc433nijsrLSp/GHP/yh/7fliSee8P8G7t+//yc/+Yl3y+nTp2WyuaW4BU1u\nDofDO0VkZ2c3Nzf7J7ePP/44Li7Op/GBBx5obm7mlj22KdfIsPR3H/zyrf+3YcMGn54//vGP\n/+d/fCe32759u/+f/AcffOCfHFavXu2fRrq6urZu3erTqFAoTp48SX62bNkyOjrq07h3796S\nkhKfxu9973tHjx71afz+979/3333+TT+9re/9U+5N998s39yrqur80/jGRkZf/zjH30aWZZd\ns2aNf/wHDx5MSUnxaXzkkUcuXrzIfxyy2S1O5x2vvVZwx+0+PX/605/+13/9l0/jQw899NRT\nT/k0Hj58+LnnnvNpLCsr+81vfuPTaDKZbr31Vv9Qq6ur/W/033777f39vk+ovPXWWytWrPBp\n3Llz56FDh3wan3zyyYcfftin8Z133vEfLXr99de/+uqrPo2NjY3+qxsMBv8dEdG6deucTt+J\npd57772srCyfxq9//es1Nb55+MUXX/T/trz++uv+38Avf/nLzz77rE/j8ePHv/Od7/g0FhUV\n+f/4LBbLDTfc4B+/gHXIiRMnVKpp3xUZ+jVk/98n7r+f6QaUBLmKx+Pp6enhP8rl8qmpKf+f\nKPvFNz5xLl265F9YWCwW/54dHR3+2+zt7fXvOTQ05N8zOTnZv2fAOP0TNOf8+fNms9l/C0TU\nMzH5n81/vX1jtjtqGhr66ut9eg4ODvpvs6+vzz+AZcuW+fe0Wq3+PQN+o1iW9e9JRK4vPhfG\naWxsrK2t9Wn0P0wi6urq8t/sli1b/HuOjIz49/T/T5SI7Ha7f8/p/l//9NNP/WejmJiY8O9p\n6ur03+zAwIB/z4GBAf+ehYWF/j3Hx8f9e/rnMk5NTY1/YedwOPx7fvbZZ/6btQf6sfb09Pj3\n9C8RiMhsNvv3DPg37nQ6A/6qBBzFe/HixZaWFp/GgGVTe3u7/2YDziQyODjo0wDIXAYAACAA\nSURBVDO0AcQUweRms9n8j84daE6ThoaGep880DcwNjbm37OzM8Bv7C233OLfc3h42L+nXq/3\n7xkwzun+X7lw4YJ/gpqcnPTv2dLS4r9ZkynAfPL9/f3+PRcvXuzfM+AfV15enn9Pj8cT8DfW\nv9QgosuXL/t3HguU3Lq7u/17btq0yb/n6Oiof0+FIsAzzg6HI2CoAdXX13d2dvo0jo+P+/ds\na2vz36x/UUhEJpPJv2dOToBXR05MTPj3TEtLCxhqbW2tfyqzfz6E1NuVK1f8Nzs8POzfs7e3\n179nwAp+bGzMv2fA/9pcLlfA77+AdUjAXf+NZ+6ampqI6Ktf/apP+//6X/+LiI4cOTKfVViW\nHfOi0+mWL18eQpCxa8RmPzUw6PNvyuUSOq6rTuPo2H1Hju250ip0IKH71idnHzt2SugoYkkk\nk1tiYuKSJUtCCNLWUN///HfHj30UwrpRYuClnUO/2C10FKF763LzfUeOtVisQgcCEEAoV+xy\ncnJkMllHR4dPO3cKXlTkO7nrnFZhGCY+/m8zwc5SlopRolKxNjXAFUEAWGhIbgAQ60J5eEKh\nUFRWVp49e9b76jrLskePHs3Ozg54eTaEVQAAIgzJDQBiXYivFNu+ffvk5KT3wMk333yzt7d3\nx44d3EebzXb+/HnvYTSzrgIAIDgkNwCIaSE+PPHoo4/u2bNn165ddXV1FRUVjY2N+/btKysr\n45+qa25uLi8v37x585EjR4JcBQBAcEhuABDTQizspFLpgQMHXnjhhXfffffAgQOpqamPP/74\niy++qNFowrgKAECEIbktHNdA38RfDhMROZ2sZWxs39tEpLvlLml8gEdxASA0Ib5SLGKu5leK\ngbDwSjEB7W/rHP3irAeLE/RfEter1kN4pRjH3njR/F+/0W25TXtdgLm1opmj+bPRt9/0aUz6\n1vdlKYGnw4ha/++zlj93976yprwgTid0LAC+8C4UAIg6pwYGuye+MPOZh0hkhV0InN2d7rFR\nZ08XEbkG+myXLkhUakVhsdBxBUuRb0x5zndKYckXX8UGAPOEwg4Aos53ypY4WPZIT99HPf1f\nW1xYrI+P83t9xVVo8swJ24W/zlNq+7TW9mmtfFG2IXYKO5JKJX4z9QNAeKGwA4Cok6XVEFGi\nQkFEGWo1bnhxVMtWylK/8Co5yTTvtgGAqxYKOwCA2KBcvFS5eKnQUQBAVAtxHjsAAAAAiDa4\nYgcAABAUu5v9Q0fXiX4TEb3R2PQVY95yQ6LQQc3B8X7TucFh7xadXP5YiVGoeGAhoLADAACY\nnYfo5xcba4dGuI/t1vGX6y4+vXzp6pQkYQMLXuf4xGnTkHeLQakgQmEnKijsAAAAZlc3NFI7\nNELkIWL4xrc+a16VnMQwM6wXRe4tyL07L7vVOv5Sbf2WRRkPGvNiJHCYA4yxAwAAmF2LxUpE\n3lUdEY3aHcNfnEw7mikkEq1MppZKiUgukWhlMo0M13fEBoUdAADA7OSSwP9jTtcOIAj8OgIA\nAMxuZZLBv9EYH6dXYPZsiCIo7AB89U1O1Y+YWy3jRDRks9ePmC+bLUIHBQACy4vT3l+Y592i\nk8seXxo7b/6AqwNurgP4OtTdd6Crh1s+ZRo8ZRpMUan+bcNqYaOakzGHc39bx7Dd7vHQry83\nfzk/J1GpEDoogJi3LS97aUL8W5+1dI5P/F1WxgMFuXjZHUQbFHYAviqTDQlfLIM0MqlQwYRg\nwuX65+q6QdtfB3Qf6emrGRr+lzUV8bhhBDBvJQn6JQn6zvGJzZnpqOogCqGwA/C1zJCwzJAg\ndBSh+++2Tr6q44zaHftaOzANKQCA6GGMHYDYfBZoROBnYxgmCAAgfijsAMRGGmiy1ICNAAAg\nMijsAMRmRVKix69xZVIsvdESAABCg8IOQGzuzM0yxsd5t+TotNvycoSKBwAAIgYPTwCIjVwi\nebFyxaGe3n0t7W6P54HCvJuyMjE5PgDA1QC5HkCEZBLm1uxFeoVCI5PdnpOFqg4A4CqBdA8A\nAAAgEijsAAAAAEQChR0AAMDVYszh/Kinn4gaRseuYHpLMUJhBwAAcFXoHJ/4zqlzVb39RNQ+\nPv78uQt/6OgWOigIMxR2ABB1PETH+k3H+k1EtL+tE9cVAMLi9YYrEy6Xd8vvWju6JiaFigcW\nAgo7AIg6e5taX7/0mWnKRkRXxizPn7tw1jQkdFAAsW3E7mi3jhN9Yf5yJ8teGB4RKiRYCCjs\nACC6dIxPfNDZ49P45uVmF+v/Qg0ACJaTZYmIyPftgg78ZYkLCjsAiC6fmQPceLU6nd24YQQw\nD8kqpV4h9283xusiHwwsHBR2ABBdGN8LCn8lmaYdIGKO9ZuO9PRzg9LOmoaP9PQ3W6xCBxUs\nKcN8rbjQp3FNavJyA14kLSp4pRgARJelCXr/RoNSsUiriXwwAN72NrWOOZzc8u/bO4no7rxs\nn1czR7N1aSkqmfSdlvZ264ROLr8tO/OO3Cyhg4IwQ2EHANFlkVZzX0Hu71o7+Ba5RPKNpcXS\n6S7lAUTKQ0UFDjfr3ZIXpxUqmNCUJxni5PJ/rj7/pfTUbfk5QocD4YfCDgCizj35OYXxcXua\nWrsnJlcaEh8uLsjC5TqIAl9KTxU6BIBZoLADgGi0MimxaSx5f1vnrTmLUNUBABG5WM+w3e7T\nmKhUKCR4YOBvUNgBAABADOidnHzmTC0RebxmbXm+omxZYoKAUUUbFHYAAAAQAzQy2drUZCI6\nPzzq8rCrkpOISC8PMIdL1DrQ1WO2O7xbCuLjuIMKl9CvXprN5qeeeiovL0+hUGRmZu7YsaOv\nr2/WtZxO53PPPSeVSletWhXyrgEAFg6SG0B0SlYpv1O25DtlSxKVCpVUyi1n62Lp+ZWjfQPv\nd3R7/6sbCvObP0K8YudwODZv3lxbW3vPPfdUVFS0tLS8/fbbVVVVNTU1iYnTzojT2Nj40EMP\nNTU1hRotAMDCQnIDgIXzWEnRlMt9ot/0l76B+wvyivRxCUpFeHcR4hW7119/vba2dvfu3fv3\n79+5c+dbb721d+/etra2l19+ebpVLBZLZWWlRCKpra2Vx9SFUwC4eiC5AcDCMcbHlRkS0tQq\nIsqL05YZErLD/XBYiIXd22+/HRcX9+STT/It9913n9Fo3LNnj8cT+K1zLpfr8ccfP3nypNFo\nDG2nAAALDckNAGJaKIWdzWarr69fs2aNUqn0br/22mtNJlNbW1vAtQwGw2uvvYbTWQCIWkhu\nABDrQinsurq63G53dna2T3tubi4Rtba2hiEuAICIQ3IDgFgXysMTVquViLRa3+dQdDod/9WQ\nORyON954g/+YnBzOZ4ABAGawoMnN5XL96le/4j8aDIb5bA0AIKBZCjuz2fzss8/yH41G49NP\nP80tM37vbeQGoPi3z4nL5frtb3/LfzQYDCzLztAfACAEkU9ubrfbO7klJCTYbLb5bBAAwN8s\nhd34+Lj39bMNGzY8/fTT8fHxFOjk1WKxEFFcXNx8AlIoFDt37uQ/fvOb30xJSZnPBgEA/EU+\nuclkMu/k9uSTT85zgwAA/mYp7LKysvwfBMvJyZHJZB0dHT7tLS0tRFRUVDSvgGSybdu28R8f\nfvhhFHYAEHaRT25SqdQ7uT366KMo7AAg7EJ5eEKhUFRWVp49e3ZycpJvZFn26NGj2dnZOTk5\n4QsPACBykNwAINaFOI/d9u3bJycnX331Vb7lzTff7O3t3bFjB/fRZrOdP3+eO80FAIgVSG4g\nYge6ep47W/d/L31GRJ/0m547W/fK+YtCBwVhFuIrxR599NE9e/bs2rWrrq6uoqKisbFx3759\nZWVl/Ojj5ubm8vLyzZs3HzlyhGs5evTowYMHuWWXy9XT08OPXH7mmWeSkpLmdyAAAGGA5AYi\nNuF0DUzZiEgjk7k8noEpmwOPJ4pOiIWdVCo9cODACy+88O677x44cCA1NfXxxx9/8cUXNZpp\n34xx6tSp3bt38x/7+/v5jzt27EDuA4BogOQGInZvQe69BblCRwELi5nuJTlRQqvVGo3GCxcu\nCB0IQOz59slqm9v95nVrhQ4kRO+2duxv69y5ctmKpEShYwm/hISEzMzMhoYGoQMBiD1PnTpn\ndTrf+tI6oQMJ0f+0de5r7fjBitKK5PDPZxniGDsAAACAyOufmppyuZ0s2zMxOXvvq0+It2IB\nIGpNud3NY1YicrhZF+upHzETUUG8TivD3zsAxLb9bZ3vtXc5WZaIvnu65vacRQ8XFQgdVHRB\nogcQm/7JqZfq6vmP3PILlctLEvTCBQUAMF/nhobfbf3CNJMfdPZk67SbMtKECikKobADEBu9\nQnFXbpZPY5JKKUgwAADhUtXT79/4UU8/CjtvKOwAxMagVPy9MV/oKAAAwmzM4fRvtARqjGZT\nLnfn+AQRtVisK5ISpfN7CbU/FHYAEHWujFnsbtY0ZSOiduuEhGEMSsUi7bQTjgDA1SBdo262\n+L7KOV2jEiSY0Fw2j/2f+stmh4OI9rd1nBkcfnZFaXJY76igsAOAqPNGY1P358+7/WdLGxFt\nXpT+jyXzelUrAMS6O3OzzpqGfCZV3poXM+/6m3S5fn7xr1UdERExXeMTv7z02QuVy8O4FxR2\nABB1bshMH/tb7iMiMsbHCRUMAESJXJ32u8uXvHW5edBmJ6JEpeKR4sKShHih4wrWheHRUbvD\np/GyeaxvcipDow7XXlDYAUDUuS1nkdAhAEA0Kk8y/HL9mm+dqp5wOv/vhjWScA9QW1BWp2ua\ndmcGha2wwwTFAAAAEDMYhmQMI2GY2KrqaJrhgAxD6eqwVXWEwg4AAAAgApYlJixN9J1P9Oas\nzHiFPIx7QWEHAAAAsOAkDPPUspK1qcnclUYpw9yek/WVcM9OhcIOAAAAIBL0CsV3ypZszcsm\noqfKljxclC+XhLkSQ2EHAAAAEDlcMSdbmDGCKOwAAAAARAKFHQAAAIBIoLADAAAAEAkUdgAA\nAAAigcIOAAAAQCRQ2AEAAACIBAo7AAAAAJFAYQcAAAAgEijsAAAAAEQChR0AAACASMiEDgAA\nAABgdr2TUz85f5GIhm12ljzfPllNRN8sXVysjxc6tCiCwg4AAABiSZJKKXQI0QuFHQAAAMSA\nTI36F+tXCx1FtMMYOwAAAACRQGEHAAAAIBIo7AAAAABEAmPsAAAAACLhQFeP2e64MmYhoqN9\nA5fNYwXxcWtTk8O4CxR2AAAAAJFwtG+g3TrBLZ82DRHRpow0FHYAAAAAseexkqIpl9u7JUGp\nCO8uUNgBAAAARIIxPm6hd4GHJwAAAABEAoUdAAAAgEigsAMAAAAQCRR2AAAAACKBwg4AAABA\nJFDYAQAAAIgE4/F4hI5hJhqNRiqVrl27VuhAACDGHDx4UCaL3hmd9Hq92+1et26d0IEAQIz5\n4IMPlErldF+N9sKurq6uoqIihBXLysoUCoXb7T5//nzYo4oAjUazZMkSIqqpqRE6lhBVVlYS\nkdVqvXLlitCxhGLJkiUajYZi/0cQu/FXVFQwDGO32y9evBjC6g6HQy6Xhz2qcLl06dKyZctC\nWHHZsmVKpZJl2bq6urBHFQFyuXz58uUej6e2tlboWELE/WZaLJampiahYwnF4sWLdTpd7P4K\nkViSm8PhqK+vD2H1iYkJ7r+ngKL9Vmx5ebknJCkpKUSkUqlCW11w1dXVRMQwjNCBhI77Ca5d\nu1boQELEFdYSiUToQELH/QiEjiJ03PW27Ozs0FaP5qqOiEpLS0M7rvT0dCJSKBShrS64jo4O\nivHkJpFIiGj16tVCBxKilStXEpFUKhU6kNBxf0QTExNCBxIiLjtlZGSEtvoMVR1Ff2EHAAAA\nAEFCYQcAAAAgEijsAAAAAERCumvXLqFjWBDLly9PT0//yle+kpOTI3QsoUhISJBIJOvXr+cG\nQ8SiRYsWFRUVbd++PTExUehYQlFWVpacnLx161aj0Sh0LCFiGKaiomLVqlVCBxKivLy8goKC\nr33ta2lpaULHEkXKy8tTU1Pvv//+/Px8oWMJhUqlkkgka9euLS8vFzqWEGVmZhYVFT322GMx\nmtxWrFhhMBjuuOOO4uJioWMJEZfcYveh8sLCwry8vO3bty9Ecov2p2IBAAAAIEi4FQsAAAAg\nEijsAAAAAEQiBgq7P/3pTwqFgvmcRCK59dZbvTscOnRILpfzHaRS6RtvvDGnDrPuIsrj/+EP\nfyiVSr13cdddd8VQ/N64nlKpNFzxR+AQMjIymEBmnmooeuLnrFy50jv46667LizBRyD+gN98\nzksvvRSuo1gISG5IblF+CEhuwsYf8JvPmSm5hXXKvfB7//33+cNTKpUMw3AfH3nkEa5DZ2cn\n30Gj0XDzRhLRBx98EGSHWXcR5fE/+eSTAXdx8803x0T83rZt28Z9NYzTAkfgEOLj47mvKr5o\nw4YNMRG/5/M5b4lIqVTy8/reeOONMRG/UqlU+OH6vP/++/M/hAWC5IbkFv2HgOQmbPyhJbdo\nL+y4k5uEhAS+paioiLxmLed+7bRaLd8hLy+PiORyeZAdZt1FlMfP/Yw3bdrEd+AedIqV+HmD\ng4P0uTDmvggcAvfOvm3btoUr5gjHv2fPHu7bfu7cOa7lBz/4AYVpYvpI/grx7rnnHiJSq9Xz\nj3/hILkhuUX/ISC5CRu/v2CSW7QXdtw7hXp7e/kWh8PB/Zy4j9xya2ur91pco8PhCKbDrLuI\n8vi5it77q2azOYbi52m1WiLipncJY+6L2K/QD37wg3DFHOH4dTodEVVUVHh38PnpRHP8Pvjf\n/87OzrAcwgJBcpu1A5Kb4IeA5CZs/D6CTG7RXtj5a21t5b9x/Nvlffpw1zOff/75WTvMuotY\njP8Xv/gFLdirGBco/p07dxKRVCr985//HN7cF4FD4JZ/97vfmc3mn/3sZ7/73e8WLviFiJ+7\ng8Clp9bW1r/85S+xFb8P7iT42muvXaD4Fw6S26zxI7lF+BCQ3ISN30eQyS32Cju9Xk+fX/x8\n+umnA/6dcFeP16xZM2uHWXcRW/GfP3/+2muv5X5XFuji+QLFz8V85MiRCOS+sB8Clzu4Fl7I\nr66PfPxcwPfff793/Onp6bESv7dz584FzJUxAclthviR3AQ5BCQ3YeP3Fnxyi4GnYr1t3Lhx\nbGyMiJqamoiIG3jIj1jkcQMkzWbzrB1m3UUMxc8wzMqVK0+cOMEwzPPPP//f//3fsRJ/RkYG\nERmNxs2bN4c9Zh8LcQgej4eI7Ha7VqvNzMzkBrd2dXUlJyfHRPycffv2yeVyo9HI5ab+/v6F\neGvLQv8Jb9y4kYiuv/76sEe+0JDcZogfyS0YSG7+8XOutuQWS4Vdbm7usWPHiOj9999fiN+q\nhd7FQsevUCi4S7gej+dHP/rRD3/4w/Buf4Hi37t3b39/P8MwC/GfjY8FOoR169YZjcZz586N\nj4/39PTY7fZ/+qd/IqLh4eGurq5w7YUW+FcoIyPD4XA0NTWZzeZ///d/J6Kuri4uT4XLQv8J\nNDQ0TExMEFFVVVXYN76gkNxmhuQ2KyS3GVxtyS02Cjun06lSqTo7OxmGOXHixJ133sm1c69K\n9Pi9Fc3pdBJRYmLirB1m3UWsxE9Edrvd7XZ7PB7uhsWPfvSjycnJ6I//H/7hH4joJz/5SVhC\nFeQQTp482dTUVFlZyX/1V7/6FXce9u1vfzv64+ccPHiQX/7617/Oxf/UU0/FSvxEdNNNN9Hn\n10hiBZLbrPETkptwh4DkFg3x01yT26w3awXncDi4czWZTGY2m72/xM8B47MK92PbvXv3rB1m\n3UVMxO+P6/DEE09EefwrVqwgIqVS+bPPcaeDDMP87Gc/C9dAV0F+BNyT8GGZ7Wmh4+c6eD/b\nxccfltmeIvb95xr//Oc/zz/myEByQ3KL5kOYbqdIbhGL36cxyOQWA4Ud90SxRqMJ+FXu+3L+\n/Hm+hbtcyX+zZu0w6y6iOf7pnhHjfgnCMsR4QePnp4sMyGemg+g8hDNnzhgMhpycnICbne7h\nvuiJ3/N5mrvtttv8N/vqq69Gf/yc6bJkNENym6EDkpvgh4DkJnj8nLkmt2hPgtx0fzKZbLoO\nKSkpRKRSqfgWg8FAXtP3zdph1l1Eefzcz9v7F/e73/0u13jlypUoj/+JJ55Y9kXc9IxEtGzZ\nsm9961vzjD8Ch8D/HXpHW1JSMqe/QwHj93w+4yV5TafEz5IfE/FzHnzwQVrgRw7DC8kNyS3K\nDwHJTfD4OXNNbtFe2HE/AJlM5v9WDe6dG/yTIwzDqNVq/gETvgSetcOsu4jy+Lmp2Onzt5rw\n7yRJTEycZ/CRid9H2GcEiMAhLFmyhGuRSCTeL5a57777YiJ+z+fnnVxC4X+FwjIVXMR+hbj/\nNaP8bRPeIvCdmXUXUR4/kpvgh4DkJnj8nrknt9go7AL60Y9+xPU5c+aM90VvqVTq8w61mTsE\ns4tojt/j8dx2220+j0yXlpbOM/JIxu9tgXLfQh/CzTff7P0jkEgk4ZqrPTLxOxyOpKQkvgPD\nMHfffXcMxe/5/ExXr9eHJewIiMB3JphdRHP8HiS3KDgEJDdh4/fMPbkxMwcHAAAAALEiNqY7\nAQAAAIBZobADAAAAEAkUdgAAAAAigcIOAAAAQCRQ2AEAAACIBAo7AAAAAJFAYQcAAAAgEijs\nAAAAAEQChR0AAACASKCwAwAAABAJFHYAAAAAIoHCDgAAAEAkUNgBAAAAiAQKOwAAAACRQGEH\nAAAAIBIo7AAAAABEAoUdAAAAgEigsAMAAAAQCRR2AAAAACKBwg4AAABAJFDYAQAAAIgECjsA\nAAAAkUBhBwAAACASKOwAAAAARAKFHQAAAIBIoLADAAAAEAmZ0AGEAcuyHR0d3d3dZrPZbrcz\nDKNSqZKSkvLy8tLT04WOLihjY2MNDQ0mk8nhcCgUiqSkpOLi4tTUVL6D3W6/dOlSb2+vzWZT\nKBTp6ellZWVqtTrIDp9++unly5f995ucnHzDDTcs9NEBQGiQ3ILp4PF4WltbW1parFarVCpN\nTExcunRpSkpKRI8TIGowHo9H6BjmZXx8/MSJExaLJeBXc3JyrrnmGoZhIhzVnFgslsOHD7vd\nbp/29evXZ2VlEZHb7T58+LDPMWq12htvvFEulwfToaampqWlxX/XKOwAohaSWzAdiOjMmTMd\nHR3eHSQSyXXXXZeWlhb2IwKIftJdu3YJHUPonE5nVVXV+Pg4EWk0muLi4sLCwoyMDLVabbVa\nWZYdGxuTSCRRfup28uRJ7hCWLFlSWloaFxdnMpmIaGRkpLi4mIiuXLnS2dlJREajcfny5Wq1\nemhoyOl0EhGXuWbt0NHRYbFYpFLpHXfcsdhLbm6uVCoV7MgBYBpIbkEmt56envr6eu7jqlWr\nUlJSBgYGuO9PYWGhUAcOIKDYvhXb1NQ0MTFBRAaDYdOmTTLZXw8nPz+/uLi4qqpKq9WyLMv3\nP336dGdnp0Qi2bp165kzZ/r6+srKyrj8wrJsS0sLVwB5PB61Wp2RkVFSUsJf8K+qqhoaGmIY\n5t577+U3+N577zkcDr1ef9NNNxHRqVOnurq6iOjuu+9ubGzs6uqy2WxarbakpCQ/Pz/gITid\nzqGhISJKTU0tKysjorS0tIGBgcHBwYmJCe7mBZfXtFptRUUF17Ovr89sNnd0dCxfvpyIZu3A\n5UGFQqFSqcL5AwCAhYHkFmRya25uJiKlUrlhwwbuu6RWq10ul1arDeOPAyCGxHZhx19+X7ly\nJZ/4OHFxcXfeeafPfQru6hTLso2Njd3d3UTkcrmIyO12Hzt2bHBwkOvGMMz4+HhTU1NnZ+em\nTZv0en2Q8fBXvz755BOLxaLT6Ww2m9Vqra6uJqKA6U8mk23dupWIJJK/PcjC3x+XSqXcqScR\nGQwGvkNSUpLZbJ6amuIGnczcQaVScYUdd+dibGzM6XTqdDoUeQBRC8ktmOSmUCi4Q8vMzOS+\nS263OyMjI8iDAhClGC7snE6n1WolIrVanZyc7N9hhtEnLS0tRqPRYDDExcURUUNDA5cdcnJy\nKioqZDJZa2trbW2t3W4/e/bsli1bggyJ36PT6bzlllsUCsXo6OhHH33Esmx9fX1eXp5/SAzD\n+GTt3t5e7jQ3LS1NKpVOTExwqdC7DuOXJyYm3G73zB1UKpXD4SAil8t1+PDh0dFR7kuZmZmr\nV69WKpVBHh0ARAaSGwWX3JxOJ3fZUqvVfvrpp62trQ6HQ6lUFhYWlpaWRvkARIAFEsOFnd1u\n5xZ8LrmfPHmSO2HlbdiwYdGiRd4tWVlZ3IV9TmtrKxEpFIo1a9ZwJ5dGo7G3t7e/v390dHRs\nbCz481pOSUmJQqEgosTExPT0dO55LovFMut2+vv7T58+TURSqZSLkLvYRl886+XPnl0u16wd\n+I1MTk5OTk7yfXp7e0+cOLF58+Y5HRoALDQkNwouufHX/5qamvhvmt1ub2hocLvdK1asmNOh\nAYhDDM9jx5+NeQ80CRL3QBZnfHycywgGg8E7ffAX/81m81y3n5CQwC9z581E5F1UBdTW1nb8\n+HGXyyWVStetW8evOH9KpVKn0+n1+uuuu27btm033HADN7xmeHh4YGAgXHsBgLBAcgsS//1x\nOBzXXHPNtm3brr/+eu4uRFNT09TUVFj2AhBbYviKHX8PkXvqirdy5crS0lIiMplMdXV1Adf1\nngOJPynkH573+ch3CJ73DQju7JaIuPuh07l48WJDQwMRqVSq9evX8/df+DC8pwzgl2Uy2awd\niIgb/sxLTk5eunRpTU0NEQ0NDWFSAICoguRGwSU3vgJOS0vLzc0lopSUFKPReOnSJZZlh4aG\nsrOz53qAALEuhgs7mUwWHx9vsVgcDsfQ0BCfLDQaDbfgkxO9eZ+88rnDJzfxKY9PXkTk8XhY\nluVWZ1l2urTocDj4MPjNzjCa7dKlS1ziS0hIuO6667xTs1qtlkgkLMvaqEPWDQAAIABJREFU\nbDa+kT8T1el0crl85g4B98iH5z/FFAAIC8mNgktufGHnXbnyu+AGogBcbWL4ViwR5eXlcQs1\nNTX8AAuOx+PhJkyalU6n47LS8PCwdyLg71Fyty34DMhPldnf3z/d9M7cAGGfZT4b+ujq6rp0\n6RIRpaSk8DdJeRKJJDExkQuP3x23TS7yWTuYzebjx48fOXLkypUr/GaHh4f5w5/+ewMAwkBy\nCya5KRSK+Ph4rpG/Lcs9SDtDVADiFsNX7IioqKiora3NarWOjY19+OGHBQUFer2eZVmLxdLV\n1cXNAiWRSHyyib+CgoLGxkaXy1VbW1tRUSGRSJqbm7nSJy0tjSt94uPje3t7iaiurq68vNxu\nt9fV1clksoAnhY2NjcnJyXq9vqOjg9uORqPhEpAPp9PJ31LJycnxGfFmMBjUanVeXt7w8PDU\n1FRtbW1WVlZfXx+Xf/kpBmbuoNPpTCaT2+3m8p1erx8ZGfnss8+ISCqVZmZmBv8NB4DIQHLj\nus3aoaCg4Pz581NTU6dPnzYajRaLhX9eJOADxQCiF9uFnVQq3bhx44kTJ7gXKTY2Nvp00Ov1\nlZWV3nMgBbR06dKhoaHBwcH29nZu+iju7FCj0axatYrrU1BQcOXKFZZlBwcHDx06RESFhYXD\nw8MBRx8nJSUdOnSIu4nAtUz3fJbJZOLvMnCD3rxxL94pKChoa2sbGRlpaWnh3wyWkJDAzT7K\nxTZDB5lMtmrVqjNnzrjd7vPnz/MbZxhm1apVmM0OIAohufGxzdyBe8jXZDJ1d3fzjwwzDFNe\nXo7X6sDVKbZfKUZEcrm8oKBAq9V6PB6Xy8WyrFwu12q1mZmZpaWlK1eu9J4voLe3l0tVRUVF\n3oNLJBJJbm6uQqFwOBxOp5NhmLi4uIKCgmuuuYY/IVYoFKmpqaOjow6HQ6VSFRUVrVixorOz\nc3JyUiaTcVmG3/6GDRsUCgX35h+9Xl9RUTHdGF6r1crN5x5QdnZ2fHw8wzDZ2dlut9tms7nd\nbu40d82aNfywklk7JCQkJCcnOxwOh8PBsqxSqczIyFi9ejVm8gSIWkhuFERy4zpIpdKpqSmX\nyyWTyVJSUlatWuUzCwzA1YOZbiAFhKC6urqtrY2Ibr31VoxdAwDRQHIDiBWx/fAEAAAAAPBQ\n2AEAAACIBAo7AAAAAJHAGDsAAAAAkcAVOwAAAACRQGEHAAAAIBIo7AAAAABEAoUdAAAAgEig\nsAMAAAAQCRR2AAAAACIR7YWdVqud7g3TAACxKyEhYenSpUJHAQBiE+2FHQAAAAAECYUdAAAA\ngEigsAMAAAAQCRR2AAAAACKBwg4AAABAJFDYAQAAAIgECjsAAAAAkUBhBwAAACASKOwAAAAA\nRAKFHQAAAIBIhF7Ymc3mp556Ki8vT6FQZGZm7tixo6+vb9a1nE7nc889J5VKV61aFfKuAQAW\nDpIbAMQuWWirORyOzZs319bW3nPPPRUVFS0tLW+//XZVVVVNTU1iYuJ0azU2Nj700ENNTU2h\nRgsAsLCQ3AAgpoV4xe7111+vra3dvXv3/v37d+7c+dZbb+3du7etre3ll1+ebhWLxVJZWSmR\nSGpra+VyeagBAwAsICQ3AIhpIRZ2b7/9dlxc3JNPPsm33HfffUajcc+ePR6PJ+AqLpfr8ccf\nP3nypNFoDG2nAAALDckNAGJaKIWdzWarr69fs2aNUqn0br/22mtNJlNbW1vAtQwGw2uvvYbT\nWQCIWkhuABDrQinsurq63G53dna2T3tubi4Rtba2hiEuAICIQ3IDgFgXysMTVquViLRarU+7\nTqfjvxqyycnJL33pS/zH4uJilmXns0EAgCAtaHKz2+0bNmzgPxYUFNhstvlsEADAX4hPxRIR\nwzA+LdwAFP/2uYqPj+eXh4aG5r9BAIDgLVByYxjGO7mNjIzMZ2sAAAGFUthxucn/5NVisRBR\nXFzcfALSaDRVVVX8R61Wi/HIABAZC5rcFAqFd3JLSEjIzMyczwYBAPyFMsYuJydHJpN1dHT4\ntLe0tBBRUVFRGOICAIg4JDcAiHWhFHYKhaKysvLs2bOTk5N8I8uyR48ezc7OzsnJCV94AACR\ng+QGALEuxHnstm/fPjk5+eqrr/Itb775Zm9v744dO7iPNpvt/Pnz3GkuAECsQHIDgJjGTDfl\n5szcbvf1119//Pjxu+66q6KiorGxcd++fcuWLTt9+rRGoyGiixcvlpWVbd68+ciRI9wqR48e\nPXjwILf82muvpaSkfPWrX+U+PvPMM0lJSQF3xI2xu3DhQghBAgDMVcSSGzfGrqGhYeGPCQCu\nJp5QWa3Wp59+Ojc3Vy6XL1q06IknnhgeHua/Wl9fT0SbN2/mW1555ZXpYmhqappuLxqNZvny\n5SEHCQAwV5FJbnq9fsmSJQt7JABw9Qnxil3E4IodAIgSrtgBwEIIcYwdAAAAAEQbFHYAAAAA\nIoHCDgAAAEAkUNgBAAAAiAQKOwAAAACRQGEHAAAAIBIo7AAAAABEAoUdAAAAgEigsAMAAAAQ\nCZnQAQAAwFXBPTw0VXvGp1GzfqNEqxMkHgBRQmEHAACR4B4dnjhe5dOoWrkKhR1AGKGwAwCA\nSJBlZiV+9etEZP7P30g02vi77yMiqT5R6LgARAWFHQAARIJEo1UUFhMRSSSMQvHXZQAIKzw8\nAQAAACASKOwAAAAARAKFHQAAAIBIoLADAIDIcbS3etwudnLC1dcjdCwAIoSHJyD8zO/8fx67\n3btFtaJCvXK1UPEAQFTweMbe3Wu7eJ6IWNf48K9+plm/Me7mO4UOC0BUUNhB+DnbW9nJCe8W\neXaeQLEAQLSYPHWMq+r+1nLyqDw7T1W6XKiQAMQHhR2EX8qzLxKR5Y/7p6pPJT3+PVl6ptAR\nAYDwpi7U+DfaLpxDYQcQRhhjBwAAkeCZmvJvZKcmIx8JgIihsAMAgEiQpqT6N8pS0iIfCYCI\n4VYsAABEgu6Gm0fbmj0uF9/CqFTa6zYLGNJceWw2j8fj3cLIZIxcLlQ8AP5Q2AEAQCTIF2Un\nPPg168H3XUMmIpJn5cTdulWaaBA6rjkY+sVP2HGrd4v2S5t1f3erUPEA+ENhBwAAEaIoKkkq\nKjG9tFMarzf845NChzNnysVLPTabq6/HNTKkKCiWqNWy1HShgwL4AhR2AAAQWQxDDCN0EKGI\nv+s+IrL+6X9cZ4Z0N94mz8wSOqK5sTd8am/+zLtFolLrbrxdqHhgIaCwgwXBTk64R4eJyNXX\ng+lOAACigbO7c+rcae8WSbwehZ3IoLCLOqzV4uhs82lUFpUwCqUg8YTA/lmD5ffvcHMUj/3+\nnakL5xIe/BqjVAkdFwDAVU1z3Q3q1etc/z97dx4fRX3/D/w9eya7uUPugxASBEkgJIhSooBR\nUWlFwS94VarEonihxXpUrYpYUVprLSpUWwX8IZ6lIihiEKHcCTdRQhKSkIMcsNnsJnvP74/R\n6TKzkGTYZHYnr+eDB4+Zdz6z855k88l7PzPzmaYG0+r3QvMvMU68mlSYHENpUNgFHGdjffua\nFYLgoIefVMcGR2Hnbje1f/oBa7PxEUfVcfOXn0dOv1XGrAAAQBVqoFCDx2olIkYfoo6OlTsj\n8D8FFna2Q/tcTQ3eEVVklGHcBLny6S3NoPiwq6cSkbXkK8ZgNFx2ORExBqPcefWU/cgB76qO\nYzu0L+KXMxidTpaUACAQuE41Wr/7hojI6fSY27lPsGHXTVNHRMqcWW8462qctdVE1LVvjzo6\nVhUaKndGAGdRYGFn/+GI7dA+74g2LSOICjt1TKzx8iuJyPrdRpUxjFsOIh6rxUfU7fZ0dapR\n2AEMYJ4Os+3IAW6Ztbu5ZeOVU4iCprCzbtts2biOW+7atc1+eH9M8YPq2EHyZtUrbtPpzu3f\nEZG94gfd0HL9sBEyJwT+psDCLuyq6w0TJjmqjlk2fmkYf0XI6AIMFPUndYyPsX1Gr1eHhfd/\nMgAQOLSDMwc98pQgqIqIkiUZCVynGi0b17FE/A29Hqul/fPVMcUPyplWbzhP1p7515us00lE\n7tYW06p3jBOvCiu6Tu68wJ8UWNipo2PU0THcLZnqiMigux092IXkjrFu2+xua/UOGi8vIrVa\nrpQAIBAwWm1QX9RlP1ZOXlUdx1l7wmO1qIxhsqTUW+bPP+SqOp51yyb9xbnaJPyhVA7cDgN+\nxuj0UbfP0Q4e8tOqWm2cdHXQnVAGABAQlET/i7t8xwONu93kajkljjsqK/o/Geg7KOzA/zSD\n4mPmPBCSV0BE0XMeCLvy2iCdjBQAgOfz/I8qLFwdLGeTPZ7exSE4obCDvsJodUTEaBR4uh8A\nBiD9RRfrs4cLguFTpwfLB1d1VLTPG5C16UP6PxnoO9ILO5PJNH/+/IyMDJ1Ol5ycXFxc3NjY\n6PdNBiZXa7Ppw/dYl8vVcsq89iNPh1nujAAGEHRu4BvDRM6603j5laqQECLSxCdG3T4nZOQo\nudPqMYYJv+H/BLHQvEt0GZmypAN9ROJoisPhKCoqKisrmzFjRn5+fmVl5YoVK0pKSkpLS6Oj\no/21iWSuxvqu3duJyHawTJOSHlzvWvfpttPLXmftNiIit7urdJej6njsvEfx5AaAfhDgnRvI\ni9Hpw66eyjrsnbv+GzH91qC7OU8/bETMPQ92bPzSWVOlCo8wTrzKMHa83EmBn0ks7JYuXVpW\nVrZ48eLf//73XGTKlCmzZs1atGjRkiVL/LWJNPajh0wfvsctOxvrz/xzafjUmwyXFvpxF32q\nY+O6n6q6n7nPtFm3loRddb1cKQEMHIHcuQFcOG1aRviUX51e/npIzuggmuEVek7iqdgVK1aE\nh4c//PDDfGTmzJlZWVkrV65kWdZfm0jAOh3mtR8Jgpavv3Cb2/21i77mqq8VB531df2fCcAA\nFLCdGwBAT0gp7Gw226FDh8aNG6fXn/X00sLCwubm5upq4QPspW0ijauh3tPVKQiyLpfzRKW/\ndtHnfN1tgFsQAPpBIHduAAA9IaVcqKurc7vdaWlpgvjgwYOJqKqqKjNTeE2bhE2kYdlz3LYd\nPJ+b9cMu7tzxvTgoSzLSOE5UktvtMZuIyFlX47Fa1NGxPp9IARBQArlzg0BgO1DKOp2u5lNE\nZD96yNVwUpOYrE1NlzuvnrJsXGfdtplb7tyxtXPHVlVEZNyCZ+XNCvxLSmHX0dFBREaj8LH0\nYWFh/Fclb2K32x955BF+NTU1taamZubMmYINV65cKfh8TESPPPJIfV2t/cejrNesPI8UXnpx\nQpw2PcO75VtvvbV582bB5jNnzrz55psFwZKSkrffflsQHD169B/+8AdB8OTJk48++qggGBoa\n+v7775PIXXfdZbVaBcElS5akp6eHFV3rqKpwnfrplrq//Xf3UatN+0Md0Wt8y9/+9rdXXXWV\nYPPPPvvsww8/FAQnTpx4//33C4KHDx9+4YUXBMGkpKTXX39dEHQ6nbfffrs4/3feeSciIkIQ\nfPzxx7nxCfsPR1i3iws+0HhqdFKCcdI1YVdO4Vu+++67X3/9tWDzG2+88bbbbhMEt23b9re/\n/U0QHDFixPPPPy8INjc3P/DAA4KgWq1evXq1OP+5c+eeOXNGEHzppZeysrIEwT//+c+7du0S\nBH/zm99cf73wksd169atWLFCEBw/frz3+5lz7Nixp59+WhCMjY196623xKnOmjVLfDrvzTff\nHDRI+HjKZ5555scffxQE58+f/4tf/EIQXLVq1X/+8x9B8LrrrrvrrrsEwd27d4uvEhs6dOif\n/vQnQbC9vf2ee+4R5////t//04jGmx988MFTp4QTpf7xj38cOXKkIPj3v//9+++Fn3NuvfXW\nm266SRDcuHHjO++84x1ZvXq1upfPO+nTzs3hcMyfP59fTUpKqq+vF3du//rXv8SvtmDBgtpa\n4UUaTz755JgxYwTB5cuXb9q0SRCcPn36LbfcIghu2bJl6dKlgmBOTs6zzwr/zDc2NnqfaOZo\ntdoPPviARIqLi81m4Y38ixcvHjJEOKfGK6+8snfvXkHw7rvvvvbaawXBtWvXivdVWFj40EMP\nCYLl5eV//OMfBcG4uDjxkXo8HvH3hIiWLVsmvuXlD3/4Q0VFBRHZfzzCun7q3O6tbyxISTJe\nUeRd2L333nvr168XbP7LX/7yzjvvFAR37Njx2muvCYLDhg178cUXBcG2trb77rtPnOqaNWsY\n0Uwr8+bNa21tFQQXLlx40UUXEZE6ZpBu6DAu+NbGb3dXVDEatXb3Yb7lHXfcccMNNwg237Bh\nw7/+9S9BcNy4cQsWLBAEKysrn3zySUEwMjLyH//4hzj/2267zfXzN5P3xhtvJCQkCILPPffc\n0aNHBcEHHnjgiiuuEARXr179+eefC4LXXHNNcXGxIFhWVvbyyy8LgoMHD3711VcFQYvFcvfd\nd4vzP2cdUl8vCD799NOjRgnvnr6QOsTnrv+H7b3S0lIieuCBBwTxV155hYg+//zzC9nEarUW\neMnLy/OZtsViEe9l+HDhDENEtOb2GZaSrwUtff6QnnvuOfFr+nw7TpkyRdzyyJEj4pbh4eG+\nvoVsVJSPCS0PHjzIfdXjcll3bmv644JTLz197eU+Lm59++23xa+5cOFCccvZs2eLW3777bfi\nltnZ2eKWXV1d4pZE1NzcLG6cn58vbvnhc093bFxnP/6jd0txrUlETzzxhPg1V61aJW55xRVX\niFtWVVWJW2o0Gh/ffZZNSkoSN961a5e45YwZM8QtX3vtNXFLn5fJz5w5U9xy+/bt4papqak+\nUxV33ERUU1Mjbjlhgo+3yurVq8UtH3vsMXHLhx56SNzys88+E7ccO3asuGVTU5O4JRHZ7XZx\n46FDh4pbbt68Wdzy17/+tbjlokWLxC3ffPNNQTOHwyFudn592rnZbDbvzk1ck3HOnDkj3ktu\nbq645ZdffiluOXfuXHHLp59+WtzyvffeE7e88sorxS2PHTsmbhkSEiJuybJsXFycuHFpaam4\n5bRp08Qt33jjDXFL8R9gIrrtttvELcUfA4goIyND3FJcUnDq6+vFjS+99FJxyw9eXtS5Z4ej\n7qxfRu/anfe73/1O/Jpr1qwRtxw/fry4ZV2d72usPR6PuHF6uo/hw23btolb+qxrX3nlFXFL\n8Wd+IrrpppvELffs2SNumZCQIG7JsqzO12Pcjx8/Lm45adIkccsVK1aIWz71lPBhxER03333\niVt+8cUX4pajR48Wt2xraxO3pN7UIRs3bhS3vJA6xGq1ipvxGLb35yiPHz+enZ09e/ZsQb/w\nzDPPvPjii5s2bSoqKpK8icfj8R51mDBhQkJCwpdffil4wSFDhoj/4NXV1TmdTiJy1lZbt5W4\nTp3SREcPuXFmdP4lgpYtLS3iD9/R0dHiD2odHR0tLS2CYGhoqLgycDgcJ0+eFARVKlVGRgaJ\nnDhxwiOa7Ds1NdX7jd688Al1bJxz+u2dncKrBgcNGiQeMDOZTKdPnxYEw8PDxf1sV1eXeJIt\nrVYrPp3EsqzPi4QGDx4sHgupr6+32+2CYGJiosFgEARbW1vFn+mjoqJiYmIEQYvF0tzcLAiG\nhIQkJycLgi6XSzykwTCMeJyAiGpqatxutyCYkpIi/gx06tQp8dhqbGxsZKRwns/29nbx77/R\naBR/+rTZbA0NDYKgRqPx2SP7LFjT09PFw2ANDQ02m00QjI+P54aOvJ0+fdpkMgmCkZGRsbHC\n0+VWq1U8tKbX61NSUgRBt9tdU1MjTvX8v6rekpKSQkNDBcHm5maLxSIIxsTEiD8amc1mwUCF\nz12fX392bpMmTYqIiBAPXWdkZKhUwqufT5486XA4BMEL/OXqeefmdDrFtcWF/3I1NTVdSOcW\nFhYWHx8vCF74L1fPO7eEhATx2GpbW1t7u/BevZ7/cvW8cyMin2f5a2trxTVrcnJySIhwwqye\n/3L1vHOz2+3i8Sq1Ws1dmSBQXV0trkDS0tK0Wq0geIGdW0REhPgUR2dnp/jjqE6nS00VTmHj\n8XhOnDghzv8CO7cLqUPO37lJKewcDofRaCwsLBSMIt52222rV6+uqakR/wpJ2IRjNBqzsrIO\nHDjQ2yRtRw60r1kRPuVXhgmTerttgOAKu9h5v5M7EYCBoj87t6ioqOTkZPEJJgA4l+Yu2/If\nhE+2vSMrMyNcWGEPZFKusdPpdAUFBbt37+7s7OQ/L3o8ni1btqSlpfnsxSRsAgDQzwK8c3Of\nOS2465/RajVxwlETAKWyud2HTgsH5Cwu4QjZACdxHrs5c+Z0dnZ6X2O4fPnyhoYG/vpEm822\nf//+ysrKnm8CACC7QO7cLCVfnX77Ne9/5s983BsEoFSpRsM/J47/58TxCaEhRq2GWx4R5eMB\nuAOZlFOxROR2uydPnrx169Zp06bl5+eXl5evWbMmJydn586d3GfWw4cP5+bmFhUV8fdndbuJ\nTzgVi1OxAP2p3zo3CadibYf3uxrr3W2ttqMHdRlDtWmDVRGRQfRYHQB/mb9jb4fT+e4VeB6a\nDxJH7NRq9fr16xcsWLB///4XX3xx69at8+bN++67787Ti0nYBACgnwVy5xaSkxd29dSQ0QVE\npMseHnb1VFR1ACAgccSu30gYsfNYLazDbq8o71j3ufGKotCCSxmNVhUuvM0qYDlP1lq+3UBE\njurjjFarTR1MRJE33aKKwGgzgHJIvnnCXn7YtPpfYVdPNV5+ZV8kBhD4Hty+x+J0/nPiL3p3\n3/vAoMAHVXWs/7ft0D5u2fr9t9bvv9WmZcTc86C8WfWcp9PqqPxp1ijWbueWWdHt0wAAAAPN\nwdNn3vnheHOXjYju37b7rouGXhKHxxqdRYGFnTY1nc6eIk49yMeEmQFLP3RY3JPCmcdVoimI\nAAAABpQ6i3XJwaN2909/4tvs9tcP//Bsfu6wyKA5KdcPFFjYGcZfQeOFjxkJJmq1SjSTIQAA\nEXmsFtvRQ0TkqKoIyRmtjsZYBQwga2tO8lUdx+nxfFZd90Se8GmEA5nEmycAAKCfOU/Wtr7+\nsu3AXiJyVB5re+MV+9GDcicF0H8aO3085dJncCBDYQcAEAw8nvZPVrG2//0NY12u9n+v8ViF\nT4UCUKoInfBpY+cKDmQKPBULcIE+q679rvGsZzjG6PXPFYySKx8AInKdanSfFj6vk7XZHFUV\nIbljZEkJoJ9NTk4saxU+NXhyMh6+chaM2AEI2T0ei9NldrhOddnO2B0Wp6tT9FBtgH7GOhy9\nigMoz7i42OkZad6Ra9OSr0xOlCufwIQROwChW4dm3Do04weT+Y+lB6akJt+RPUTujABIHZ/A\nqNWs2y2Ia5JTZMkHQBazhmZcnpTwXOkBm9u9aGxeWphR7owCDkbsAACCgCrUYJw8RRAMHXOJ\nNilVlnwA5JJsCDVoNFqVClWdTxixAwAIDsbLr1SFGizffePpaGdCQ43jJxoKJ8udFAAEFozY\nAQAECYYJvWR8xC+nE5Gx8ErjpKsZDT6cA8BZ0CkA+MASVXdYiKixs6vL7Q5Vq+XOCABgoGvu\nsi3/oYKITtvtLg/74r5DRHRHVmZGOM7J/g8KOwChDqfzlQNHj7WbiWhva9sjO/Y+NHL4xdGR\ncucFADCg2dzuQ6dN/Cq3bHHhWepnQWEHILSsvIKr6jhn7I6/Hi7/82UF4VpMgwkAIJv0MOOa\nosvlziLQ4Ro7gLOYHc69LcJpYE0O5x5REKCfuc+cdjacdJ1uIyK3ud3ZcNLVcqrbrQBgQMGI\nHcBZ2p1OVhRkiNodGO0HmVlKvrIdKOWWu3Zt69q1TZuSFjN3vrxZAUBAQWEHcJZBIXqNinG5\nWWLOiicZQmXKCOAnuiFZzNnXA6ijYuRKBgAkeHx32YkOq3dkUlLCfRcP8+MuUNgBnCVUrb4+\nLeU/NSe9gxnhxoJB+AsKMgvNHxeaP07uLABAuhSDQUWMye447XAkhoYaNOpBIXr/7gKFHYDQ\nrMwMD8uur2vwsCwRjYqJ/u2ILK0KF6QCAMAFeShnOBF9Vl27pqpm9rDM/D4YMsDfKgAhjYr5\ndXbmU3k5RHRNStIfxuTEhYTInRQAAED3UNgB+MYN0ekxNTEAAAQPFHYAAAAACoHCDgAAAKA/\nuDzsf2pObqhrIKL3K6p2nGrx+y5w8wSAUIfT2elyn7Y7iMjqcp3qsqkZxu83LgEAwEDz7o/H\nSxqauOWmzq6/Hv6hw+m6JjXJj7tAYQcg9Fl13fq6em65pKGppKEpLiTk7xMukTcrAAAIalVm\nC1/V8VYdr7oiKT7Ef9dzo7ADEBoWGe7wJHpHwvCUWAAAuDBVHR3ioN3tOWntzIoI99deUNgB\nCI1PiBufECd3FgAAoCjnmg9V59d5UnHzBAAAAECfy4mJ0quFdVdCaEiq0eDHvaCwAwAAAOhz\nsXr9XcOyvCMhavUDIy9SMcy5NpEAp2IBAAAA+sPk5ITMiLB3fzj+Y7t5QkLcr7Mzo/U6/+4C\nI3YAAAAA/WRwmDEvNpqIChPj/V7VEUbsAJTntN3x1c/TtfCuTk3CE28BABQPhR2A0rQ7HGtr\nTgqC+YNiUNgBACgeCjsApUk2GP40bgwRvXrgiMPj+cOYXCJKNoTKnRcAwEDX5XJ7iHV4PERk\nc7utLpeGYfT+m52YUNgBKI9ercoMDyMirUrlZlluGQAAZPdc2YETHVZu+fXDPxDRpKSE+y4e\n5sddoLADAAAA6A+jYqITQ886fzLUf8+c4KCwAwAAAOgPt2cN6etdSJ/uxGQyzZ8/PyMjQ6fT\nJScnFxcXNzY2druV0+l88skn1Wr12LFjJe8aAKDvoHMDgOAlccTO4XAUFRWVlZXNmDEjPz+/\nsrJyxYoVJSUlpaWl0dHR59qqvLz8jjvuqKiokJotAEDfQucGAEFN4ojd0qVLy8rKFi9e/Mkn\nnzz11FPvvvvuqlWrqqurFy1adK5NzGZzQUGBSqUqKyvTarVSEwY7KiHGAAAgAElEQVSA7rlZ\nduPJxnaHs9Pl+qquweVh5c4oaKBzA4CgxrCslB5/zJgxlZWVLS0ter2eD2ZnZ5vN5qamJsbX\nU89Onz790ksv/elPf9JqtSEhITk5OXv37u12R0ajMSsr68CBAxKSBBiYXB72+bKDx9rNfCQz\nPOyFsaO1Kjxppnv91rlFRUUlJycfPXrUn9kDwIAnpaO32WyHDh0aN26cd8dHRIWFhc3NzdXV\n1T63iomJWbJkCT7OAvS1L2pPeld1RFTVYfmsulaufIIIOjcACHZSrrGrq6tzu91paWmC+ODB\ng4moqqoqMzNTckIul+s///kPvxoZGSn5pQAGpv1tp8XBfW1nZg3N6Pdcgkyfdm5ut3vt2rX8\nani4n+c4AAAgaYVdR0cHERmNRkE8LCyM/6pkDofjpZde4lcTEhI8Hs+FvCDAQOPzijqXpIsu\nBpo+7dxcLpd35xYXF2ez2S7kBQEAxLop7Ewm0xNPPMGvZmVlLViwgFsWX2vCXa7n8xqUXiSk\n0cyePZtfXbJkSVRU1IW8IMBAMywy4rhZWIIMi8T40Fn6v3NTq9Xendtrr70Wgqf3AoC/dVPY\nWSyWZcuW8asTJkxYsGBBREQE+frwajab6YLPL+h0ugcffJBffeKJJ1DYAfTK9CFpu5pb2+x2\nPhKp087KHCxjSgGo/zs3jUbj3bk988wzycnJF/KCAABi3RR2qamp4ttm09PTNRpNTU2NIF5Z\nWUlE2dnZfswPAHorXKtddEneR1U13zee8hB7RWLCzMzBkTqd3HkFFnRuAKBIUq6x0+l0BQUF\nu3fv7uzsNBgMXNDj8WzZsiUtLS09Pd2vGQJAr0XrdXNHZB85Y7K53f59vHT/2NncanG6vCMp\nxtARUX1+KxU6NwAIdhLntZozZ05nZ+err77KR5YvX97Q0FBcXMyt2my2/fv3cx9zAQB65eOq\nmn/8UOH9b2tTc//sGp0bAAQ1iY8Uu/vuu1euXPncc8/t27cvPz+/vLx8zZo1ubm5/NXHx48f\nHzNmTFFR0aZNm7jIli1bNmzYwC27XK76+nr+yuXHHnssNjb2wg4EAJTj/zIHW5yu0ta2stbT\n16WlpBoNKcbQ/tk1OjcACGoSCzu1Wr1+/frnn3/+448/Xr9+fXx8/Lx581544QX+5IXYjh07\nFi9ezK82NTXxq8XFxej7AIB3WfwgIjpjt5e1nh4TGz069pwPafU7dG4AENQkPlKs3+CRYgCS\nPbR9j83tXn75ZXInItHHVTWfVNc+lZfTn4Vdv8EjxQCgL+DZkQAAAAAKIfFULAAErOoOyxO7\n9/Grs77dSkTPF4wa3vd3lQIAgLxQ2AEoTYhanRsjnNbboMEvOwCA8qGvB1CaJEPo02Ny5c4C\nAABkgGvsAAAAABQChR0AAACAQqCwA4BAZHd7mrq6iKjOYg3oOZkAAAIJrrEDgIBT0d7x18Pl\nrTY7Ea08Xr2rpW3BqIsjdVq58wIACHQYsQOAwNLlcr/2c1XHOdZufuvoMRlTAgAIFijsACCw\n7Gs73eZV1Z0nCAAAAijsACCwmByOXsUBAICHwg4AAktCaCiR8H4JFcPEh4bIkg8AQBBBYQcA\ngWV0THRmeLggeFVKYrgWN08AAHQDhR0ABBaNinl01MX8U9EYYq5OSfp1dqa8WQEABAUUdgAQ\ncOJC9E+PyZ2ankJEj+QOLx6epVOhswIA6B76SgAIUKFqNRGFqNVyJwIAEDRQ2AEAAAAoBAo7\nAAAAAIVAYQcAAACgECjsAAAAABQChR0AAACAQqCwAwAAAFAIFHYAAAAACqGROwEAAKEva+vb\nHY4fTGYi2tzQdOSMKSsifFz8ILnzAgAIdCjsACDglDQ0nbR2css7mluJqCglEYUdAEC3UNgB\nQMB5JHeEw+PxjoRrtXIlAwAQRFDYAUDASTUa5E4BACAo4eYJAAAAAIVAYQcAAACgECjsAAAA\nABQChR0AAACAQqCwAwAAAFAIFHYAAAAACoHCDgAAAEAhUNgBAAAAKAQKOwAAAACFQGEHAAAA\noBAo7AAAAAAUAoUdAAAAgEIwLMvKncP5GI3GkJCQm2++We5EACDIvPnmm2q1Wu4szikqKoph\nmJkzZ8qdCAAEmTfeeEOn053rq4Fe2P3nP/+ZNm2ahA1HjBgRGhrqdrsPHDjg96z6gcFgGD58\nOBGVlZXJnYtEY8aMYRjGZDJVVVXJnYsUw4YNCwsL83g8+/fvlzsXifLz8xmGKS0tlTsRifLy\n8lQqldVq/fHHHyVs7nA4tFqt37Pyl/Xr10+dOlXChiNHjtTr9S6X6+DBg37Pqh9otdrc3FwK\n5s4tPz+fiM6cOVNdXS13LlJkZWVFRESwLLtv3z65c5GooKCAZdngfQuNHj1arVZ3dnb+8MMP\nEja3Wq0Gg+FcX9VcQGL94frrr9+7d6+EDR999FGr1RoSEiJtc9mdOHHiT3/6E8MwQZo/Ec2d\nO5eIxowZ89FHH8mdixTPPvvsqVOnNBpNsP8Igjf/++67z+PxpKWlffDBBxI212gCun+bMmWK\ntB/NggULOjo6grdza2tre+qppyiY35n33nsvy7KjR4/++OOP5c5FihdeeKG+vl6lUgXvj2Du\n3LkMw3z//ffnqW8C2bx589xud1JS0qpVqyRsHhIScp6vBnTHR0QajaagoEDahkTEMIy0zWUX\nGhrKLQRp/jyj0Rikh8D95gTvW4gXvPkzDENEWq02eA/hPNRq9cDs3BobG7mFIM2fZzAYgvQQ\nFPP3paCgIEgLuz7t3HDzBAAAAIBCoLADAAAAUIhAPxUrWXFx8ddffx2848wZGRk5OTnnP48e\n4KZOnVpTU1NcXCx3IhLdc889H3744bBhw+RORLoxY8Y4HA65s5Du5ptvPnLkyE033SR3IoHl\nrrvu2rhx4+jRo+VORKLIyMicnJxAvq+lW7/85S+rq6tnz54tdyISzZkz54MPPsjKypI7EekK\nCgrsdnvwvotuueWW/fv3X3/99X3x4oF+VywAAAAA9BBOxQIAAAAoBAo7AAAAAIUIgsLuyy+/\n1Ol0zM9UKpXgtPTGjRu1Wi3fQK1WL1u2rFcNut1FgOf/7LPPqtVq711Im9VZrvy9cS39+8CA\nvj6EpKQkxhd/3YffPz+CvLw87+Qvv/xyvyTfD/n7/OZzXnzxRX8dRV9A54bOLcAPAZ2bvPn7\n/OZzzte5sYFt7dq1/OHp9XqGYbjV3/zmN1yD2tpavoHBYFCpfipV161b18MG3e4iwPN/+OGH\nfe7i2muvDYr8vU2fPp37qkqluvDk++0QIiIiuK/qzjZhwoSgyJ9l2cTERC6o1+v565Gvueaa\noMhfr9frRLg2a9euvfBD6CPo3NC5Bf4hoHOTN39pnVugF3bch5uoqCg+kp2dzX0XuFXubWc0\nGvkGGRkZRKTVanvYoNtdBHj+3M940qRJfAPuRs5gyZ/X0tJCP/Nj39cPh6DX64lo+vTp/sq5\nn/NfuXIl923fu3cvF3n88ceJSK1WB0X+YjNmzCCi0NDQC8+/76BzQ+cW+IeAzk3e/MV60rkF\nemHHzbHe0NDAR/jpG7hVbrmqqsp7Ky7ocDh60qDbXQR4/lxF7/1Vk8kURPnzjEYjEeXl5fm3\n7+u3t9Djjz/ur5z7Of+wsDAiys/P924g+OkEcv4C/Pu/trbWL4fQR9C5ddsAnZvsh4DOTd78\nBXrYuQV6YSfGP1GeZdljx475/CXnxjOfeeaZbht0u4tgzP9vf/sb+elDbb/lzz07Uq1Wf/31\n1/7t+/rhELjljz76yGQy/eUvf/noo4/6Lvm+yJ87g8B1T1VVVd99911w5S/AfQguLCzso/z7\nDjq3bvNH59bPh4DOTd78BXrYuQVfYRcZGUk/D34uWLDA5+8JN3o8bty4bht0u4vgyn///v2F\nhYXce6WPBs/7KH8u502bNvVD3+f3Q+D6Di7CS0tLC5b8uYRnzZrlnX9iYmKw5O+Nf6h5HyXf\np9C5nSd/dG6yHAI6N3nz99bzzi0I7or1NnHixPb2diKqqKggIu7CQ/6KRR53gaTJZOq2Qbe7\nCKL8GYbJy8vbtm0bwzDPPPPMp59+Giz5JyUlEVFWVlZRUZHfcxboi0NgWZaI7Ha70WhMTk7m\nLm6tq6sbNGhQUOTPWbNmjVarzcrK4vqmpqam9PT0IMqff30imjx5st8z72vo3M6TPzq3nkDn\nJs6fM9A6t2Aq7AYPHvz9998T0dq1a/viXdXXu+jr/HU6HTeEy7LswoULn332Wf++fh/lv2rV\nqqamJoZh+uKPjUAfHcL48eOzsrL27t1rsVjq6+vtdvu9995LRG1tbXV1df7aC/XxWygpKcnh\ncFRUVJhMprfffpuI6urquH7KX/r6V+Do0aNWq5WISkpK/P7ifQqd2/mhc+sWOrfzGGidW3AU\ndk6nMyQkpLa2lmGYbdu23XDDDVx8yJAh9PNHCkF7IoqOju62Qbe7CJb8ichut7vdbpZluRMW\nCxcu7OzsDPz877zzTiJ6+eWX/ZKqLIewffv2iooK7wcTv/XWW9znsIceeijw8+ds2LCBX547\ndy6X//z584MlfyKaMmUK/TxGEizQuXWbP6Fzk+8Q0LkFQv7U286t25O1snM4HNxnNY1GYzKZ\nvL/EzwEj2IT7sS1evLjbBt3uIijyF+Ma3H///QGeP/cgc71e/5efcR8HGYb5y1/+4q8LXWX5\nEXB3wvtltqe+zp9r4H1vF5+/X2Z76rfvPxf8+uuvLzzn/oHODZ1bIB/CuXaKzq3f8hcEe9i5\nBUFhx91RbDAYfH6V+77s37+fj3DDlfw3q9sG3e4ikPM/1z1i3JvAL5cY92n+/HSRPglmOgjM\nQ9i1a1dMTEx6errPlz3XzX2Bkz/7czc3depU8cu++uqrgZ8/51y9ZCBD53aeBujcZD8EdG6y\n58/pbecW6J0gN92fRqM5V4O4uDgiCgkJ4SMxMTHkNX1ftw263UWA58/9vL3fuI8++igXPHbs\nWIDnf//99+ecjZuekYhycnIefPDBC8y/Hw6B/z30znb48OG9+j2UMX/25xkvyWs6JX6W/KDI\nn3PrrbdSH99y6F/o3NC5BfghoHOTPX9Obzu3QC/suB+ARqMRP1WDe+YGf+cIwzChoaH8DSZ8\nCdxtg253EeD5c1Ox089PNeGfSRIdHX2ByfdP/gJ+nxGgHw5hxIgRXESlUnk/WGbmzJlBkT/7\n8+dOrkPh30J+mQqu395C3F/NAH/ahLd++M50u4sAzx+dm+yHgM5N9vzZ3nduwVHY+bRw4UKu\nza5du7wHvdVqteAZaudv0JNdBHL+LMtOnTpVcMv0yJEjLzDz/szfWx/1fX19CNdee633j0Cl\nUvlrrvb+yd/hcMTGxvINGIa58cYbgyh/9udPupGRkX5Jux/0w3emJ7sI5PxZdG4BcAjo3OTN\nn+1958acPzkAAAAACBbBMd0JAAAAAHQLhR0AAACAQqCwAwAAAFAIFHYAAAAACoHCDgAAAEAh\nUNgBAAAAKAQKOwAAAACFQGEHAAAAoBAo7AAAAAAUAoUdAAAAgEKgsAMAAABQCBR2AAAAAAqB\nwg4AAABAIVDYAQAAACgECjsAAAAAhUBhBwAAAKAQKOwAAAAAFAKFHQAAAIBCoLADAAAAUAgU\ndgAAAAAKgcIOAAAAQCFQ2AEAAAAoBAo7AAAAAIVAYQcAAACgECjsAAAAABQChR0AAACAQmjk\nTsAPPB5PTU3NyZMnTSaT3W5nGCYkJCQ2NjYjIyMxMVHu7Hqkvb396NGjzc3NDodDp9PFxsYO\nGzYsPj6eb2C3248cOdLQ0GCz2XQ6XWJiYm5ubmhoaE8aWCyW9evXn2vXkyZN8t4RAAAABC+G\nZVm5c7ggFotl27ZtZrPZ51fT09MvvfRShmH6OateMZvN33zzjdvtFsR/8YtfpKamEpHb7f7m\nm28Ex2g0Gq+55hqtVtttAxR2AAAAA0Rwj9g5nc4tW7ZYrVYiMhgMQ4YMCQ8Pd7vdp0+frqmp\ncblctbW1ERERF198sdyZnk9paSlX1Y0YMSI+Pr6tre3w4cNEdODAAa6wq6io4Iq2rKys1NTU\nU6dOlZeXW63W8vLyUaNGddsgJCRkwoQJgp1yY5xqtTo8PLyfjxcAAAD6SHAXdhUVFVxVFxMT\nM2nSJI3mp8MZMmTIsGHDSkpKjEajx+Ph2+/cubO2tlalUt100027du1qbGzMzc0dNmwYEXk8\nnsrKypqaGrPZzLJsaGhoUlLS8OHD+dOdJSUlra2tDMP83//9H/+C//73vx0OR2Rk5JQpU4ho\nx44ddXV1RHTjjTeWl5fX1dXZbDaj0Th8+PAhQ4b4PASn09na2kpE8fHxubm5RJSQkHDq1KmW\nlhar1cqdma2trSUio9GYn5/PtWxsbDSZTDU1NVxhd/4GGo0mJSXFe6dWq3XXrl1ENHLkSO/z\nuQAAABDUgruwq6mp4Rby8vL4qo4THh5+ww03CE7CqtVqIvJ4POXl5SdPniQil8tFRG63+/vv\nv29paeGaMQxjsVgqKipqa2snTZoUGRnZw3y41yei//73v2azOSwszGazdXR07Nmzh4h81nYa\njeamm24iIpXqfzey8OfH1Wq1x+Npb28nopiYGL5BbGysyWTq6urirqg7f4OQkBDBTvfu3ety\nuSIiIriiFgAAAJQhiAs7p9PZ0dFBRKGhoYMGDRI3OM+ldZWVlVlZWTExMdyJyKNHj3JVXXp6\nen5+vkajqaqqKisrs9vtu3fvvvrqq3uYEr9Hp9N53XXX6XS6M2fOfPvttx6P59ChQxkZGeKU\nGIYRlKQNDQ3cGF5CQoJarbZarVyd512f8ctWq9Xtdp+/gaCwq62tPXXqFBGNHj3au5oEAACA\nYBfEhZ3dbucWjEajd3z79u3caBxvwoQJgnORqamp3FlLTlVVFRHpdLpx48ZxtU5WVlZDQ0NT\nU9OZM2fa29t7PmjHGT58uE6nI6Lo6OjExETuZlWz2dzt6zQ1Ne3cuZOI1Go1l6HT6eS+5F2E\n8UODLper2wber+/xeA4ePEhEsbGxSUlJvTooAAAACHBBPGDDj355X0XXQ9xNCRyLxcLViDEx\nMd61EX9m02Qy9fb1o6Ki+GX+7oTOzs7zb1VdXb1161aXy6VWq8ePH98XtzUcO3aMSyMnJ8fv\nLw4AAADyCuIRO71ezy1YLBbveF5e3siRI4moubl53759Prf1vmOAH/Hipg7h8at8g57zPrvK\nDd0RkcPhOM8mhw8fPnr0KBGFhIT84he/4E8u82l4z4fCL2s0mm4b8EGPx/Pjjz8SUVhYWEJC\nQm8PCgAAAAJcEBd2Go0mIiLCbDY7HI7W1la+EjIYDNyCoODz5j0yxxdGgsKLr+f4yoyIWJb1\neDzc5h6P51w1n8Ph4NPgX5avRMWOHDnCVXVRUVGXX365d90ZGhqqUqk8Ho/NZuODXV1d3EJY\nWJhWqz1/Az7Y0NDAjU2mpaWdKxMAAAAIXkF8KpaIMjIyuIXS0lL+kjsOy7LNzc09eZGwsDCu\n5Gpra/O+Io27w4B+PifLl3f8PMBNTU3nmt6Zu/tBsMyXegJ1dXVHjhwhori4uCuvvFIw/4hK\npYqOjubS43fHvSaXebcN+Jeqr6/nFrzPRAMAAIBiBPGIHRFlZ2dXV1d3dHS0t7d/9dVXmZmZ\nkZGRHo/HbDbX1dVxU9ypVKpup2rLzMwsLy93uVxlZWX5+fkqler48eNtbW1ElJCQwA16RURE\nNDQ0ENG+ffvGjBljt9v37dun0WgEdydwysvLBw0aFBkZWVNTw72OwWCIiIgQt3Q6nfz54vT0\ndL6a5MTExISGhmZkZLS1tXV1dZWVlaWmpjY2NnLFJT9/SrcNONydvxqNhisEAQAAQGGCu7BT\nq9UTJ07ctm0b95TY8vJyQYPIyMiCggLvCd58uvjii1tbW1taWk6cOMHNjccNfRkMhrFjx3Jt\nMjMzjx075vF4WlpaNm7cSERDhw5ta2vzeWtFbGzsxo0buTOkXGT06NE+d93c3MyfQi0tLRV8\nlXuqWGZmZnV19enTpysrKysrK7kvRUVF8bPQdduAiFwuF3fbhPfJWQAAAFCS4C7siMhgMFx9\n9dUnTpw4efLkmTNnHA6HRqMJCQmJjY1NTk5OTk7uyYNiuQLx+PHjtbW13JMnjEZjSkrKRRdd\nxJ+BDQsLmzRpUllZmdls1uv1GRkZOTk5mzdvJtGUIkSUm5sbERFRXV1tt9u5Z5pdyNlPhmEm\nTpx4+PDh+vp6bsLhlJSUkSNH8nOadNuAznHJIAAAACgJc66rxECCPXv2VFdXE9H111+PgTEA\nAADoZ8F98wQAAAAA8FDYAQAAACgECjsAAAAAhcA1dgAAAAAKgRE7AAAAAIVAYQcAAACgECjs\nAAAAABQChR0AAACAQqCwAwAAAFAIFHYAAAAAChHohV1OTs7UqVPlzgIAAAAgCGjkTqAb1dXV\n3k+yBwAAAIBzCfQROwAAAADoIRR2AAAAAAqBwg4AAABAIVDYAQAAACgECjsAAAAAhUBhBwAA\nAKAQKOwAAAAAFAKFHQAAAIBCoLADAAAAUAjphZ3JZJo/f35GRoZOp0tOTi4uLm5sbOx2K6fT\n+eSTT6rV6rFjx0reNQAAAACISXykmMPhKCoqKisrmzFjRn5+fmVl5YoVK0pKSkpLS6Ojo8+1\nVXl5+R133FFRUSE1WwAAAAA4J4kjdkuXLi0rK1u8ePEnn3zy1FNPvfvuu6tWraqurl60aNG5\nNjGbzQUFBSqVqqysTKvVSk0YAAAAAHyTWNitWLEiPDz84Ycf5iMzZ87MyspauXIly7I+N3G5\nXPPmzdu+fXtWVpa0nQIAAADAeUgp7Gw226FDh8aNG6fX673jhYWFzc3N1dXVPreKiYlZsmQJ\nxuoAAAAA+oiUwq6urs7tdqelpQnigwcPJqKqqio/5AUAAAAAvSTl5omOjg4iMhqNgnhYWBj/\nVcm6urpuueUWfnXIkCEX8moAAAAAA4fEu2KJiGEYQYS7uk4c7xWWZevr6/lVrVbr8Xgu5AUB\nAAAABggphV1ERAT5Gpkzm81EFB4efiEJhYaGlpSU8KspKSmZmZkX8oIAAAAAA4SUwi49PV2j\n0dTU1AjilZWVRJSdnX0hCTEMwxWOHAzXAQAAAPSQlJsndDpdQUHB7t27Ozs7+aDH49myZUta\nWlp6err/0gMAAACAnpI4j92cOXM6OztfffVVPrJ8+fKGhobi4mJu1Waz7d+/nxvDAwAAAIB+\nwJxrPuHzc7vdkydP3rp167Rp0/Lz88vLy9esWZOTk7Nz506DwUBEhw8fzs3NLSoq2rRpE7fJ\nli1bNmzYwC0vWbIkLi5u9uzZ3Opjjz0WGxvrc0dGozErK+vAgQMSkgQAAAAYUCTeFatWq9ev\nX//8889//PHH69evj4+Pnzdv3gsvvMBVdT7t2LFj8eLF/GpTUxO/WlxcfK7CDgAAAAB6SOKI\nXb/BiB0AAABAD0m8xg4AAAAAAg0KOwAAAACFQGEHAAAAoBAo7AAAAAAUAoUdAAAAgEKgsAMA\nAABQCBR2AAAAAAqBwg4AAABAIVDYAQAAACgECjsAAAAAhUBhBwAAAKAQKOwAAAAAFAKFHQAA\nAIBCoLADAAAAUAgUdgAAAAAKgcIOAAAAQCFQ2AEAAAAoBAo7AAAAAIVAYQcAAACgECjsAAAA\nABQChR0AAACAQqCwAwAAAFAIFHYAAAAACoHCDgAAAEAhUNgBAAAAKIRG7gRAgTq+Wss6HN4R\n/bCL9cNHypUPAADAAIHCDvzPtr/U02n1jqjCIlDYAQAA9DUUdgHHfqzctOodQXDQw0+qYwfJ\nko8EMfc+QqzH8u0G28F90XfMUcclMCEGuZMCAABQPhR2AUelD9EmpxKRs7Ge0Wg0cQlERJpg\n+kmpo6KJiNGHEJEqIkodHSt3RgAAAANCMJULA4R28JCYex8houaFT6hj47hlAAAAgG7hrljo\nK6zTQUSsyyV3IgAAAAMFCrsA5ayvI4/H09npbmuRO5dec7U2n37377b9pUR05t2/W779ilhW\n7qQAAACUD6diAw/Lmj9f07V/DxGxZlPb0iXGiVcZJ14td1o9xTrspg/edbe1/rTqdlu3fMNo\ntcYriuRNDAAAQPEwYhdwOndu5ao6DutyWb79yl7xg4wp9Yrt0D6+quNZt35Lbrcs+QAAAAwc\nKOwCTlfZbnHQtm+POBiY3KfbxEHWbndbOvo/GQAAgAEFhV3AEUzt+1PQaun/TKRRGcN8RNVq\nlQFT2QEAAPQt6YWdyWSaP39+RkaGTqdLTk4uLi5ubGz0+yYDkGZQnDioHhTf/5lIox85mgkJ\nEQRDc/MZrU6WfAAAAAYOiTdPOByOoqKisrKyGTNm5OfnV1ZWrlixoqSkpLS0NDo62l+bDEzG\nSVMc1W96Rxh9iHHCJJnS6TV1ZFTkjNvNn3/IDz3qMrPCp94ob1a90vnf72yH9nlHVOERUbfP\nkSsfAACAHpJY2C1durSsrGzx4sW///3vuciUKVNmzZq1aNGiJUuW+GuTgUk3ZGjkrDs7Nqz1\nmNuJSBOfGP6rGeqYYHp4g/6ii2MffrL94xWO48cib7olZMwlcmfUO25zu7PhpHdEHRUjVzIA\nAAA9x7CSJhgbM2ZMZWVlS0uLXq/ng9nZ2WazuampiWEYv2xCREajMSsr68CBAxKSDG4s27zw\nCXVMbOwDv5c7FYnMX3zStWdH7LzfaRKT5c5FCmdN9el3/26YMCl8yq/kzgUAAKBHpFxjZ7PZ\nDh06NG7cOO8SjYgKCwubm5urq6v9sslAxzDEMKRSy50HAAAABA0phV1dXZ3b7U5LSxPEBw8e\nTERVVVV+2WTAYp0O95k295k2Ipbcrp+WMQlc/3I1N1m3fEtE9h8O244clDsdAACAHpFyjV1H\nRwcRGY1GQTwsLIz/quRNHA6H9yV38fHxLS0tixcvFmz46HGg1UIAAB8ZSURBVKOParVaQfCd\nd95paxNOojZr1qyMjAxBcMOGDQcPCv9aFxYWTpgwQRA8ePDghg0bBMEhQ4bMnDlTEGxtbX33\n3XcFQZ1O98gjj5DIX//6V7vdLgjefffdcXFxjupK06p3uIirpflf9/ymxtRumDBJZfjfd2/K\nlCl5eXmCzbdv375161ZBMCcnZ+rUqYJgTU3Nhx9+KAhGR0f/9re/FQRdLtef//xncf4PPvig\nQTR9yXvvvXfq1Ckism7bTE4n63GRh/2l5YXMuEGGCZO9nzzxzTfflJWVCTa/7LLLJk6cKAge\nPXr0iy++EATT0tJuu+02QbC9vf3tt98WBFUq1WOPPSbOf+nSpRaLcAaZO++8MykpiYgcVcdN\nK5ezbjcRrdu+s/KLDbqMTF32CL5lUVHR2LFjBZvv2bOnpKREEBw+fPi0adMEwYaGhpUrVwqC\n4eHh8+bNE6cqfvMT0X333RcRESEIrlq1qr6+XhC84YYbRowYIQhu3rx5927hdIkFBQVXXXWV\nIHjs2LHPP/9cEExMTJw9e7YgaLVa//73v4tTXbBggVotHHhetmyZyWQSBG+99db09HRBcN26\ndUeOHBEEr7jiivHjxwuC+/bt27hxo3fkscceU6kwoxMADDBs75WWlhLRAw88IIi/8sorRPT5\n559fyCZWq7XAi7h84VgsFvFehg8fLm65ceNGccu7775b3PK5554Tt/zHP/4hbjllyhRxS/Gf\nHyIKDw8Xt2RZNioqStz44MGDLMs6GupMH77P/7tmzGhxy7ffflv8mgsXLhS3nD17trjlt99+\nK26ZnZ0tbtnV1SVuSUTNzc3ixvn5+eKWK+6+o+Uvi6zbt3i3vP/++8Utn3jiCfFrrlq1Stzy\niiuuELf0Oe6r0Wh8fv+5Ak5g165dLMuyHk/Lnxc2PfMo9++XI7LFLV977TXxa/q8B2jmzJni\nltu3bxe3TE1N9Zmqz8tPa2pqxC3FH0uIaPXq1eKWPovdhx56SNzys88+E7ccO3asuGVTU5O4\nJRHZ7XZx46FDh4pbbt68Wdzy17/+tbjlokWLxC3ffPNNQTOHwyFuBgCgbFJG7LihAvHInNls\nJqLw8PAL2USv17/88sv86h133JGZmbls2TLBhiGimdKI6J///KfVau3c/V9nXS0fzNj9vamt\nIeqWswYYfve73916662CzTMzM8Wved11133zzTeCYGysj3tUBw8eLG4pHqvgfP755y6XSxAc\nMmQIEWmTUiNn3ckHF1806rFW4RO6xGMwRHT77bdfdtllgqDPCiYvL0+cqngEjoh0Op24JRFF\nRkaKg2+++ab4Rzx69OhBccKZ+R544IEbbxROgCIeWCWioqIicQI+y+LExERxy3PdlLNmzRrx\niCn3wcB9ps1tOsMHH738sjsLRhORYexl+pE/FdnDhg0Tv+bNN988erSwCk9ISBC3vPjii8Wp\nCi4/5QlGoTjx8T7mNfzrX/8qHgbLzc0Vt7znnnuuueYaQVB8pQQRTZgwQZyqeLCQiKKjo32+\nVTQaH53M+++/L/7MIP7uEdHjjz9+5513CoJZWVnilr/61a+ys8+qwn3uGgBA2aTcFetwOIxG\nY2Fh4ebNm73jt9122+rVq2tqasTnUyRswpFwV2zH+n/bfzzKOh0eS4cq1MCEhGqSUgSFHcC5\nuNtaW1//kzgePuVXhuCZTRAAAAYmKZ9odTpdQUHB7t27Ozs7+WEej8ezZcuWtLQ0nyWahE0k\nC7/+xvDrb7QdOdC+ZoXxiiL8MYZeUcfEqiOj3O3CoS9tho+zhwAAAAFF4pXFc+bM6ezsfPXV\nV/nI8uXLGxoaiouLuVWbzbZ///7KysqebwIQEBgmYprwzhjD+Mu1KT7OVAIAAAQUiRMUu93u\nyZMnb926ddq0afn5+eXl5WvWrMnJydm5cyc3IHf48OHc3NyioqJNmzb1cBOfJE9QbP3vZsvX\n6wyXXR5+3TQ6x4VWAOfiaqy3fL3OXnVMFR0TXnRdSO4YvIsAACDwSby4WK1Wr1+//vnnn//4\n44/Xr18fHx8/b968F1544TwlmoRNpPFYOto/XuWoPk5EnTu3OmurI//v1+rYQf7dCyibJinF\nOPkae9WxkItHhYzycbcv9Kll5RUtNpt3ZExszNT0FLnyAQAIFhJH7PqNhBG7MyuWO47/6B3R\nJCbHzJ3PnOMGVQCf8EgxGf1uZ+lJa6d3pCgl8bfDfUw9AwAA3pQ2HYCrtVlQ1RGRq6nBWX1c\nl3WRLClB0LFsWt+1Zzt5PAxDXbu32cp2qSKjY+f9Tu68BpAXx+Z5iF17om5tzclHc0fkxERp\nGEw1DADQPaUVdh7RzYwct7m9nzOB4MVotUyIgYgYQxgXUfmaNxH6TqhGTURalYqIQtRqI2ak\nAwDoGaV1l+qo6F7FAcSME682Trxa7iykc7e1mtd9KgiGX3uDJsHHbNUB64zdUWm2ENGhM6aL\noyO1eDgYAEAPKK6wi43TXzTS/uNZT/fSpqTpMAkZDBgeh81ReUwYtPl+OlxgKms9/bcjP3S5\n3ET0Rc3JXc2tT4/JTQjFuCkAQDcUePOEp9Nq/vxD+49HuVXt4MzIGbeqo2L6JkGAwOPxeOx2\nIjr91l9Yhz324SeJSKXXU5AMerU7nI/s2Gs9+5l7WRHhiy7x/eRoAADgBUdH3ysqgzHq9jnh\nU28iIuOESTF3z0NVBwOLSqUKDVWFhhLDEMP8tBwkVR0RHWg7YxU9Sfm4ueNUl81newAA4AVN\nX99bqrDwn/7HvLIwIDlqqlhbF+twOKoru28dSCwup8+41Sms9gAAQEBp19gBALGs+d8fde3b\nza2d+debIbljIm++PVg+5KQafUxarlExiQZcYwcA0A0FFnbmf39kLz/Iut1EZCn5yvr9Jk1K\nevSdv5U7L4B+0rVvN1/VcWyH9mnTMgyXFcqVUq/kRkePiok+ePoMsUQ/16I3ZaQbMOkJAEB3\nFHgqltHpmBCDyhiujo5VhUUwIQZGp5c7KYD+Yzu031dwX/9nIg3D0MM5w69MTlSpGCIKVatv\nyxoyPSNN7rwAAIKAAj8Bh19/Y/j1N8qdBYBsWF8zm/gMBqwwrWbuiOxonfbTE3WP5I4YHYt5\nKAEAekSBI3YAA5wmLtFHMN5HMMAxQXJRIABA4FDgiB3AAGecdLWt/CBrt/MRRqczXjlFxpR6\nq6ShqcPp+rHdTEQ7mltPWKyDw4x5GLcDAOgOCjsApVHHxEbPvrdjw7+ddTVEpE1JC792miYu\nQe68euHL2vqT1k5ueXNDExEVpSSisAMA6JYCnzwBAJzWvyxiHfa4J16QO5FeO9Zutrs93pEY\nvS7F1zQoAADgDSN2AMrFMMEyd53AsMgIuVMAAAhKKOwAlMZjbu/ctY2I2K5O1u22fPMlEYVe\nMh7P1gMAUDwUdgBK47Z2WLeW8Kvcsm7YCBR2AACKh8IOQGk0MXHRs+cKgtqEJFmSAQCA/oTC\nDkBpGL1eN3SY3FkAAIAMMEExAAAAgEKgsAMAAABQCBR2AAAAAAqBwg4AAABAIVDYAQAAACgE\nCjsAAAAAhUBhBwAAAKAQKOwAAAAAFAKFHQAAAIBCoLADAAAAUAgUdgAAAAAKgcIOAAAAQCFQ\n2AEAAAAoBAo7AAAAAIVAYQcAAACgECjsAAAAABQChR0AAACAQkgv7Ewm0/z58zMyMnQ6XXJy\ncnFxcWNjY7dbOZ3OJ598Uq1Wjx07VvKuAQAAAEBMI20zh8NRVFRUVlY2Y8aM/Pz8ysrKFStW\nlJSUlJaWRkdHn2ur8vLyO+64o6KiQmq2AAAAAHBOEkfsli5dWlZWtnjx4k8++eSpp5569913\nV61aVV1dvWjRonNtYjabCwoKVCpVWVmZVquVmjAAAAAA+CaxsFuxYkV4ePjDDz/MR2bOnJmV\nlbVy5UqWZX1u4nK55s2bt3379qysLGk7BQAAAIDzkFLY2Wy2Q4cOjRs3Tq/Xe8cLCwubm5ur\nq6t9bhUTE7NkyRKM1QEAAAD0ESnX2NXV1bnd7rS0NEF88ODBRFRVVZWZmSk5IY/Hs3fvXn7V\naDRKfikAAACAAUVKYdfR0UG+Sq6wsDD+q5LZbLZ58+bxqykpKR6P50JeEAAAAGCA6KawM5lM\nTzzxBL+alZW1YMECbplhGEFj7uo6cbxX1Gr1VVddxa9++umnBoPhQl4QAAAAYIDoprCzWCzL\nli3jVydMmLBgwYKIiAjyNTJnNpuJKDw8/EIS0uv1L7/8Mr/6xhtv4GYLAAAAgJ7oprBLTU0V\n3+Wanp6u0WhqamoE8crKSiLKzs72Y34AAAAA0ENS7orV6XQFBQW7d+/u7Ozkgx6PZ8uWLWlp\naenp6f5LDwAAAAB6SuI8dnPmzOns7Hz11Vf5yPLlyxsaGoqLi7lVm822f/9+bgwPAAAAAPoB\nc675hM/P7XZPnjx569at06ZNy8/PLy8vX7NmTU5Ozs6dO7l7HQ4fPpybm1tUVLRp0yZuky1b\ntmzYsIFbXrJkSVxc3OzZs7nVxx57LDY21ueOjEZjVlbWgQMHJCQJAAAAMKBIfFasWq1ev379\n888///HHH69fvz4+Pn7evHkvvPDCee5g3bFjx+LFi/nVpqYmfrW4uPhchR0AAAAA9JDEEbt+\ngxE7AAAAgB6SeI0dAAAAAAQaFHYAAAAACoHCDgAAAEAhUNgBAAAAKAQKOwAAAACFQGEHAAAA\noBAo7AAAAAAUAoUdAAAAgEKgsAMAAABQCBR2AAAAAAqBwg4AAABAIVDYAQAAACgECjsAAAAA\nhUBhBwAAAKAQKOwAAAAAFAKFHQAAAIBCoLADAAAAUAgUdgAAAAAKgcIOAAAAQCFQ2AEAAAAo\nBAo7AAAAAIVAYQcAAACgECjsAAAAABQChR0AAACAQqCwAwAAAFAIFHYAAAAACoHCDgAAAEAh\nUNgBAAAAKAQKOwAAAACFQGEHAAAAoBAo7AAAAAAUAoUdAAAAgEKgsAMAAABQCBR2AAAAAAqB\nwg4AAABAIVDYAQAAACgECjsAAAAAhUBhBwAAAKAQKOwAAAAAFIJhWVbuHM7HaDRGRkY+/PDD\ncicCAEHmscceU6nw2RUABpZAL+zeeOONhx56SMKGw4cPNxqNNpvtyJEjfs+qH2i12lGjRnk8\nnn379smdi0R5eXlqtbqlpaW2tlbuXKTIzMyMjo52Op0HDx6UOxeJ8vPziaisrEzuRCQaNWqU\nVqttb28/fvy4hM0dDodWq/V7VgAAgUwjdwLdmDt3bmJiooQNX3/9dZvNZjQaP/roI79n1Q+a\nmpref/99tVodpPkT0eLFi4lo1KhRS5YskTsXKf7xj3+cPn1ap9MF+48gePN/9dVXPR5Pamrq\nSy+9JGFztVrt95QAAAJcoI/YSVZUVNTe3q7Vanfs2CF3LlIcPXr0zjvvZBhmz549cuci0dix\nY4lo5MiR77//vty5SDFjxoyamhqVSrV79265c5GI+xHs3btX7kQkuvTSS91ud3x8/Pr16+XO\nBQAgOOACFAAAAACFQGEHAAAAoBCKLeyuvPLKyMjI8ePHy52IRCkpKZGRkXFxcXInIt3IkSMj\nIyOnTJkidyISXXvttZGRkaNHj5Y7EeliY2MjIyPlzkK6Sy65JDIy8rrrrpM7EQCAoKHYa+wA\nAAAABhrFjtgBAAAADDQo7AAAAAAUIggKuy+//FKn0zE/U6lU119/vXeDjRs3arVavoFarV62\nbFmvGnS7iwDP/9lnn1Wr1d67mDZtWhDl741r6d8ZyPr6EJKSkhhfDAZDUOTPycvL807+8ssv\n90vy/ZC/z28+58UXX/TXUQAABAc2sK1du5bLk2EYvV7PMAy3+pvf/IZrwD/VgPs7yj9BaN26\ndT1s0O0uAjx//nlrgl1ce+21QZG/t+nTp3NfValUF558vx1CREQE91Xd2SZMmBAU+bMsy08D\nrtfr+ac1XHPNNUGRv16v14lwbdauXXvhhwAAEEQCvbDjRm6ioqL4SHZ2NtfFc6vc31Sj0cg3\nyMjIICKtVtvDBt3uIsDz5/6ATZo0iW8wbNiwIMqf19LSQj/zY2HXD4eg1+uJaPr06f7KuZ/z\nX7lyJfdt37t3Lxd5/PHHiUitVgdF/mIzZswgotDQ0AvPHwAguAR6YafRaIiooaGBjzgcDu6P\nELfKLVdVVXlvxQUdDkdPGnS7iwDPnxuu8P6qyWQKovx5RqORiPLy8vxb2PXbW+jxxx/3V879\nnH9YWBgR5efnezcQ/HQCOX8B/v1fW1vrl0MAAAgigX6NndPpZFk2KSmJj5w8eZJfrqio4BaG\nDBnivRV3smbhwoXdNuh2F4Gfv81ms9vt3l9dsWIFEfHnvAI8f84f/vAHq9WqVqu5x5v6UT8c\ngsfjIaKCgoL29vbXXnvt448/Dq78rVYrEa1bt46Iqqurt2zZQkT8CdnAz18gPT2diAoLC9PS\n0vxyCAAAwUTGolIabsJV7szOggULyNfoDndqbNy4cd026HYXwZX//v37CwsLuZ9sH50Z7KP8\nuZw3bdr09ddf+9wkkA+Bq6G5CC8tLS1Y8ucSnjVrlnf+iYmJwZK/N/7BuH2UPABAgAv0ETuB\niRMntre3088f9LmrqsVDU9xgg8lk6rZBt7sIovwZhsnLy9u2bRvDMM8888ynn34aLPlzwzlZ\nWVlFRUV+z1mgLw6BZVkistvtRqMxOTmZu3K/rq5u0KBBQZE/Z82aNVqtNisriyu8mpqauKGv\nYMmff30imjx5st8zBwAICsFU2A0ePPj7778norVr1/bFn8y+3kVf56/T6bjzUyzLLly48Nln\nn/Xv6/dR/qtWrWpqamIYpi8qaYE+OoTx48dnZWXt3bvXYrHU19fb7fZ7772XiNra2urq6vy1\nF+rjt1BSUpLD4aioqDCZTG+//TYR1dXVcUWYv/T1r8DRo0e508olJSV+f3EAgKAQHIWd0+kM\nCQmpra1lGGbbtm033PD/27vXmCivPI7jZ4bHuXEdLq21DHaXgSJoWQJpasMKLrt4v3RN6tJW\n0m2TNmpqTRNMibVtYmOhRFZAxaqpq8U3uzHVjYkxMVujaa01xqE16ipbUtuuiqviIFiGgdkX\np8xOGQR0hrmcfj+vZs4cz/kfJczP55k5Z6Fslx+78fiditbX1yeEsFqto3YYdYpoqV8I0dvb\n29/f7/F45N3Y9evX9/T0RH79lZWVQoiampqglBqWJXz++eeXLl0qLCz0vtrc3CwvMq1atSry\n65cOHTrkffzqq6/K+levXh0t9Qsh5MHEvp/nA4BfnDDc/r1PLpdLXojSNK2zs9P3Je8GV0P+\niHxPqq2tHbXDqFNERf3+ZIeVK1dGeP35+flCCKPRWD9IXuvS6XT19fVHjx4NvP7xXsK9JpXb\nfARlK7vxrl928P3iqrf+oGxlF7K/f9l4+PDhwGsGgCgVBcFObpdgsViGfVX+0nc4HN4WeS9G\n/HwzhRE6jDpFJNff2NgohtuyTr7DBeX7E+Na/8hfvRyyjUtkLuHkyZPJyckZGRnDDrtu3boI\nr98zmOHmzZvnP2xdXV3k1y/dKwICwC9KpP8SlHuZapp2rw5paWlCCJPJ5G1JTk4WPnuTjtph\n1CkivH75Zub7rvzGG2/IxosXL0Z4/StXrpz6c3LvWSHE1KlTX3vttQDrD8ESvCHDt9qcnJxg\nhYwQ/AjJ7XyFz15x3iNAoqJ+qaKiQozz96kBIPJFerCT7y6apvkfGSQPFPJ+LU6n05nNZu+3\n57z/vx+1w6hTRHj98pwJMXhkk/fAJavVGmDxoal/iKBvdxKCJUyZMkW26PV631Oznn322aio\n3zN4UU2mJe+PUHFxcbTU7xk8joLTJgD8wkVHsBvW+vXrZZ+TJ0/63tGLiYkZckDkyB3GMkUk\n1+/xeObNmzdkP4i8vLwAKw9l/b7GKdiN9xJmz57t+0+g1+uDdRBFaOp3uVwpKSneDjqdbvHi\nxVFUv2fwMl5iYmJQygaAKKXzjPibFwAAANEiOrY7AQAAwKgIdgAAAIog2AEAACiCYAcAAKAI\ngh0AAIAiCHYAAACKINgBAAAogmAHAACgCIIdAACAIgh2AAAAiiDYAQAAKIJgBwAAoAiCHQAA\ngCIIdgAAAIog2AEAACiCYAcAAKAIgh0AAIAiCHYAAACKINgBAAAogmAHAACgCIIdAACAIgh2\nAAAAiiDYAQAAKIJgBwAAoAiCHQAAgCIIdgAAAIog2AEAACiCYAcAAKAIgh0AAIAiCHYAAACK\nINgBAAAogmAHAACgCIIdAACAIgh2AAAAiiDYAQAAKIJgBwAAoAiCHQAAgCIIdgAAAIog2AEA\nACiCYAcAAKAIgh0AAIAiCHYAAACKINgBAAAogmAHAACgCIIdADUtXrxY5yMtLa2srOzYsWPh\nrisIFF4agAAR7ABEioG7PQNdziAOmJmZ+emgxsZGt9s9c+bMU6dOBXGKseh2u2/09gZ3zKAv\nbcuWLS+++GLwCgQQHlq4CwAA0ffDd10H9/X98J0QIiYxKW7WAtPU3wQ+bFxcXGlpqffpM888\nY7fbGxoaWlpaAh98LL67073zX20XOp1CiCSDocL+WOkjDwdl5KAv7fTp00EpDEB4ccUOQJgN\nOG93frxDpjohRP/tztt/+9j174tBn8hkMj3xxBNtbW3yaVpa2qZNm+bOnWsymW7fvu12u999\n992cnByz2Zydnd3c3BzgdF19fRscZ2WqE0J0ulzN5y5+2fHfAIcd1pCl9fb2VlVV2Ww2g8Ew\nefLktWvXut1u+dLx48dnzJiRlJQUHx9fXFwsb+CWlpbu2rVr9+7dOp3O4XCMR4UAQoMrdgBC\nZKCnu7/zln97z4ljAz3dQxq7Dh1I+GOFf2e92RJjTX7gGtrb2/Py8uRjg8Gwffv2BQsWrFu3\nLjY2tqqqavv27c3NzU8//fSRI0def/11g8Hw8ssvjzpmt9t97e6P/u3//M/Vm72uIY172tpT\nzSb/zhYtZqLZfP8L+j/fpa1YsWL//v1bt24tKir64osvli9ffvfu3fr6+u7u7vnz51dUVHz4\n4Ycej2fz5s1z5sz5/vvvDxw4UFZWlpWV1dTUZLVaAykDQHgR7ACESO+5r53/+PsYO7s7rt7c\n9hf/dlN+YeKS58Y+qfdK1bVr15qami5cuNDQ0CBbdDqdxWKpra0VQjidzq1bt1ZXV1dWVgoh\n7Hb76dOna2pqxhLsWm/cajh7YYz1XL/7Y/WXZ/zbC1OT1+TnjXEQ6V5Lu3Hjxp49e+rq6pYu\nXSqEyMzMPH/+/KZNm2pqai5fvux0Ol944YUpU6YIIRobG5cuXWo0Gi0Wi6ZpRqMxNTX1vmoA\nEGkIdgBCRJs4Kfa3v/Nv77143n3typBGvdlsLpo+zCCPPDr2GVtbWydMmOB9arVaP/roo/Ly\ncm/L9Ok/TeFwOFwul+9LpaWlO3fuvHPnTlxc3MizpMdaFk1O92//+mbnN113hjQa9Po5tkn+\nnR+NtYy2mp8ZYWmtra1ut/upp57yvlpUVNTd3X3p0qWcnJzHH3/8+eefX758eXl5eUFBQUlJ\nyX3NCyDCEewAhMiE9IwJ6Rn+7YbM7Ft/3Tak0TK9JLb0DwHOmJ2dvXfv3p8GtFiysrJ8w5AQ\nIjExUT5wOp1CiJkzZ+p0OtkyMDAghLh69ardbh95loy42Ofsv/Jvb3N2rT019PNq5emThu18\nv0ZYmlxLQkKCt3N8fLwQoqurKyYm5vjx4x988MGOHTuqq6szMjLee++9ZcuWBV4PgAhBsAMQ\nZoZfZ8X9fm73p4c9/f2yxZg7LXZGWeAjm83moqKisfSUCa+lpWXatGm+7Tab7YFntyfE/zk7\ns6WtvW9gQLbkp1j/lDn5gQf0NcLS5FpkvJPkY9melpZWV1dXV1d37ty5jRs3VlZW5ubmFhYW\nBqUqAGFHsAMQfrEzyoy50/q+aRtw9RoyHpuQEYRrWvclPz/faDR2dHTk5OTIluvXr+v1eqPR\nGMiws22TClKTv755q8fdn5kQl2dNCkaxo8jPz9c07bPPPvPejT1x4kRiYmJWVlZ7e/tXX321\naNEiIURubu62bdt279599uxZGew8Hk8IygMwrgh2ACKClvqQlvpQuGZPSEh45ZVX3nnnndTU\n1CeffPLbb79dvXp1enr6wYMHAxz5YbPp4UcfCUqRY5ScnPzSSy+9//77dru9oKDg6NGjW7Zs\nqaqq0jTt8uXLS5Ysqa2tnT9/vk6n27t3r16vlx80tFqtZ86ccTgcNpstJSUllAUDCCKCHQAI\nIUR9fX1SUtKaNWuuXLkyceLEhQsXbtiwIdxFPaCmpqb4+PgVK1Z0dHTYbLa33nrrzTffFEKU\nlJTs2rVr48aNb7/9tqZpeXl5n3zySXZ2thBi1apVy5YtKy4u3rdv36xZs8K9AgAPSMe1dwAA\nADVw8gQAAIAiCHYAAACKINgBAAAogmAHAACgCIIdAACAIgh2AAAAiiDYAQAAKIJgBwAAoAiC\nHQAAgCIIdgAAAIog2AEAACiCYAcAAKAIgh0AAIAiCHYAAACKINgBAAAogmAHAACgCIIdAACA\nIgh2AAAAiiDYAQAAKIJgBwAAoAiCHQAAgCIIdgAAAIog2AEAACiCYAcAAKAIgh0AAIAiCHYA\nAACKINgBAAAo4n/8Ss5fGm5iOwAAAABJRU5ErkJggg=="
          },
          "metadata": {
            "image/png": {
              "width": 420,
              "height": 420
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We see a notable treatment effect heterogeneity across groups, time, and\n",
        "particularly with length of exposure to the treatment (with most groups\n",
        "tending to experience larger negative effects at longer lengths of\n",
        "exposure). The parallel trends assumption appears to be violated for\n",
        "some groups, as there is a significant deviation from zero effect in\n",
        "pre-treatment periods.\n",
        "\n",
        "**Two-Way Fixed Effects Regression**\n",
        "\n",
        "Next, we want to estimate an *overall* causal effect. Two-way fixed\n",
        "effects (TWFE) regressions is an often used approach to implement DiD\n",
        "identification strategies. In this setting, we assume\n",
        "\n",
        "$$Y_{it} = \\theta_t + \\eta_i + \\alpha D_{it}+\\nu_{it} $$where $Y_{it}$\n",
        "is the outcome of interest, $\\theta_t$ is a time fixed effect, $\\eta_i$\n",
        "is a unit fixed effect, $D_{it}$ is an indicator for whether or not unit\n",
        "$i$ participated in the treatment in time period $t$, and $\\nu_{it}$ are\n",
        "idiosyncratic, time-varying unobservables. Under parallel trends\n",
        "assumption, $\\alpha$ can be interpreted as causal effect of\n",
        "participating in the treatment. Note that this is not valid under effect\n",
        "heterogeneity."
      ],
      "metadata": {
        "id": "S74GIsTG5yCx"
      },
      "id": "S74GIsTG5yCx"
    },
    {
      "cell_type": "code",
      "source": [
        "twfe1 <- feols(lemp ~ treated | countyreal + year,\n",
        "               data=data)\n",
        "twfe2 <- feols(lemp ~ treated | countyreal + year,\n",
        "               data=data2)\n",
        "twfe3 <- feols(lemp ~ treated | countyreal + year,\n",
        "               data=data3)\n",
        "twfe4 <- feols(lemp ~ treated | countyreal + year,\n",
        "               data=data4)\n",
        "twfe5 <- feols(lemp ~ treated | countyreal + year,\n",
        "               data=data5)\n",
        "\n",
        "# print results\n",
        "modelsummary(list(twfe1, twfe2, twfe3, twfe4, twfe5),\n",
        "             stars=TRUE,\n",
        "             output=\"jupyter\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "80dgSpGw53fi",
        "outputId": "c989119a-48f5-4519-fb64-378363edee83"
      },
      "id": "80dgSpGw53fi",
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table style=\"NAborder-bottom: 0; width: auto !important; margin-left: auto; margin-right: auto;\" class=\"table\">\n",
              " <thead>\n",
              "  <tr>\n",
              "   <th style=\"text-align:left;\">   </th>\n",
              "   <th style=\"text-align:center;\">  (1) </th>\n",
              "   <th style=\"text-align:center;\">   (2) </th>\n",
              "   <th style=\"text-align:center;\">   (3) </th>\n",
              "   <th style=\"text-align:center;\">   (4) </th>\n",
              "   <th style=\"text-align:center;\">   (5) </th>\n",
              "  </tr>\n",
              " </thead>\n",
              "<tbody>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> treated </td>\n",
              "   <td style=\"text-align:center;\"> −0.037*** </td>\n",
              "   <td style=\"text-align:center;\"> −0.035*** </td>\n",
              "   <td style=\"text-align:center;\"> −0.026*** </td>\n",
              "   <td style=\"text-align:center;\"> −0.009 </td>\n",
              "   <td style=\"text-align:center;\"> 0.011+ </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;box-shadow: 0px 1.5px\">  </td>\n",
              "   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.005) </td>\n",
              "   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.006) </td>\n",
              "   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.006) </td>\n",
              "   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.007) </td>\n",
              "   <td style=\"text-align:center;box-shadow: 0px 1.5px\"> (0.006) </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> Num.Obs. </td>\n",
              "   <td style=\"text-align:center;\"> 18851 </td>\n",
              "   <td style=\"text-align:center;\"> 17549 </td>\n",
              "   <td style=\"text-align:center;\"> 8932 </td>\n",
              "   <td style=\"text-align:center;\"> 7630 </td>\n",
              "   <td style=\"text-align:center;\"> 3270 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> R2 </td>\n",
              "   <td style=\"text-align:center;\"> 0.994 </td>\n",
              "   <td style=\"text-align:center;\"> 0.993 </td>\n",
              "   <td style=\"text-align:center;\"> 0.994 </td>\n",
              "   <td style=\"text-align:center;\"> 0.994 </td>\n",
              "   <td style=\"text-align:center;\"> 0.997 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> R2 Adj. </td>\n",
              "   <td style=\"text-align:center;\"> 0.993 </td>\n",
              "   <td style=\"text-align:center;\"> 0.992 </td>\n",
              "   <td style=\"text-align:center;\"> 0.993 </td>\n",
              "   <td style=\"text-align:center;\"> 0.993 </td>\n",
              "   <td style=\"text-align:center;\"> 0.996 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> R2 Within </td>\n",
              "   <td style=\"text-align:center;\"> 0.004 </td>\n",
              "   <td style=\"text-align:center;\"> 0.003 </td>\n",
              "   <td style=\"text-align:center;\"> 0.003 </td>\n",
              "   <td style=\"text-align:center;\"> 0.000 </td>\n",
              "   <td style=\"text-align:center;\"> 0.001 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> R2 Within Adj. </td>\n",
              "   <td style=\"text-align:center;\"> 0.004 </td>\n",
              "   <td style=\"text-align:center;\"> 0.003 </td>\n",
              "   <td style=\"text-align:center;\"> 0.002 </td>\n",
              "   <td style=\"text-align:center;\"> 0.000 </td>\n",
              "   <td style=\"text-align:center;\"> 0.001 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> AIC </td>\n",
              "   <td style=\"text-align:center;\"> −18397.0 </td>\n",
              "   <td style=\"text-align:center;\"> −16710.9 </td>\n",
              "   <td style=\"text-align:center;\"> −9546.5 </td>\n",
              "   <td style=\"text-align:center;\"> −7841.6 </td>\n",
              "   <td style=\"text-align:center;\"> −4894.3 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> BIC </td>\n",
              "   <td style=\"text-align:center;\"> 2782.7 </td>\n",
              "   <td style=\"text-align:center;\"> 2829.8 </td>\n",
              "   <td style=\"text-align:center;\"> −440.6 </td>\n",
              "   <td style=\"text-align:center;\"> −228.6 </td>\n",
              "   <td style=\"text-align:center;\"> 1764.8 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> RMSE </td>\n",
              "   <td style=\"text-align:center;\"> 0.13 </td>\n",
              "   <td style=\"text-align:center;\"> 0.13 </td>\n",
              "   <td style=\"text-align:center;\"> 0.12 </td>\n",
              "   <td style=\"text-align:center;\"> 0.13 </td>\n",
              "   <td style=\"text-align:center;\"> 0.08 </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> Std.Errors </td>\n",
              "   <td style=\"text-align:center;\"> by: countyreal </td>\n",
              "   <td style=\"text-align:center;\"> by: countyreal </td>\n",
              "   <td style=\"text-align:center;\"> by: countyreal </td>\n",
              "   <td style=\"text-align:center;\"> by: countyreal </td>\n",
              "   <td style=\"text-align:center;\"> by: countyreal </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> FE: countyreal </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "  </tr>\n",
              "  <tr>\n",
              "   <td style=\"text-align:left;\"> FE: year </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "   <td style=\"text-align:center;\"> X </td>\n",
              "  </tr>\n",
              "</tbody>\n",
              "<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n",
              "<sup></sup> + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</td></tr></tfoot>\n",
              "</table>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The results vary notably across different datasets with estimates\n",
        "ranging from minimum wage changes decreasing teen employment by 3.7% on\n",
        "average (relative to teen employment in the absence of the minimum wage\n",
        "change) to minimum wage changes increasing teen employment by 1.1%\n",
        "(which is marginally statistically significant). Interestingly, these\n",
        "estimates essentially cover the range of estimates of minimum wage\n",
        "effects in the literature.\n",
        "\n",
        "We compare these estimates with the estimates we get from different\n",
        "versions of the Callaway and Sant’ Anne estimator. These aggregate the\n",
        "group-time average treatment effects to get an estimate of the average\n",
        "treatment effect on the treated\n",
        "$ATT = \\mathbb{E}[Y_{i1}(1)- Y_{i1}(0)|D_i=1]$, with $Y_{i1}$ indicating\n",
        "that we are comparing the post-treatment outcomes. For simplicity of\n",
        "comparison, we only use sub-dataset `data2`.\n",
        "\n",
        "First, we aggregate the estimates with the never-treated as control\n",
        "group."
      ],
      "metadata": {
        "id": "lQ3cEVbZVeTg"
      },
      "id": "lQ3cEVbZVeTg"
    },
    {
      "cell_type": "code",
      "source": [
        "cs_o <- aggte(cs_res, type=\"group\")\n",
        "res_df <- cbind.data.frame(att=cs_o$overall.att, se=cs_o$overall.se, ci_low=cs_o$overall.att-1.96*cs_o$overall.se, ci_up=cs_o$overall.att+1.96*cs_o$overall.se)\n",
        "res_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "wa-rnn_RVfUS",
        "outputId": "f05b2600-1c8b-4932-e6b8-5c04e326c44e"
      },
      "id": "wa-rnn_RVfUS",
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A data.frame: 1 × 4</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>att</th><th scope=col>se</th><th scope=col>ci_low</th><th scope=col>ci_up</th></tr>\n",
              "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>-0.03994014</td><td>0.005110992</td><td>-0.04995769</td><td>-0.0299226</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA data.frame: 1 × 4\n\n| att &lt;dbl&gt; | se &lt;dbl&gt; | ci_low &lt;dbl&gt; | ci_up &lt;dbl&gt; |\n|---|---|---|---|\n| -0.03994014 | 0.005110992 | -0.04995769 | -0.0299226 |\n\n",
            "text/latex": "A data.frame: 1 × 4\n\\begin{tabular}{llll}\n att & se & ci\\_low & ci\\_up\\\\\n <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t -0.03994014 & 0.005110992 & -0.04995769 & -0.0299226\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  att         se          ci_low      ci_up     \n",
              "1 -0.03994014 0.005110992 -0.04995769 -0.0299226"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We can also add covariates for potential confounding. In the estimator\n",
        "with control variables, we control for the log of county population, the\n",
        "log of county average annual pay, and region fixed effects."
      ],
      "metadata": {
        "id": "PyixoXwwcrR-"
      },
      "id": "PyixoXwwcrR-"
    },
    {
      "cell_type": "code",
      "source": [
        "csX_res <- att_gt(yname=\"lemp\",\n",
        "                 tname=\"year\",\n",
        "                 idname=\"countyreal\",\n",
        "                 gname=\"G\",\n",
        "                 data=subset(data2, region !=1),\n",
        "                 xformla=~lpop + lavg_pay + region,\n",
        "                 base_period =\"varying\",\n",
        "                 control_group=\"nevertreated\")\n",
        "csX_o <- aggte(csX_res, type=\"group\", na.rm=TRUE)\n",
        "res_df <- cbind.data.frame(att=csX_o$overall.att, se=csX_o$overall.se, ci_low=csX_o$overall.att-1.96*csX_o$overall.se, ci_up=csX_o$overall.att+1.96*csX_o$overall.se)\n",
        "res_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "4KqIZJ18cvHg",
        "outputId": "b386afc1-2f03-48fa-b21b-e06fb6f5b0a3"
      },
      "id": "4KqIZJ18cvHg",
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A data.frame: 1 × 4</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>att</th><th scope=col>se</th><th scope=col>ci_low</th><th scope=col>ci_up</th></tr>\n",
              "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>-0.02907042</td><td>0.005272055</td><td>-0.03940365</td><td>-0.0187372</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA data.frame: 1 × 4\n\n| att &lt;dbl&gt; | se &lt;dbl&gt; | ci_low &lt;dbl&gt; | ci_up &lt;dbl&gt; |\n|---|---|---|---|\n| -0.02907042 | 0.005272055 | -0.03940365 | -0.0187372 |\n\n",
            "text/latex": "A data.frame: 1 × 4\n\\begin{tabular}{llll}\n att & se & ci\\_low & ci\\_up\\\\\n <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t -0.02907042 & 0.005272055 & -0.03940365 & -0.0187372\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  att         se          ci_low      ci_up     \n",
              "1 -0.02907042 0.005272055 -0.03940365 -0.0187372"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Next, we use the group of not-yet-treated as control group."
      ],
      "metadata": {
        "id": "B6uJP2pkcuSu"
      },
      "id": "B6uJP2pkcuSu"
    },
    {
      "cell_type": "code",
      "source": [
        "cs_res <- att_gt(yname=\"lemp\",\n",
        "                 tname=\"year\",\n",
        "                 idname=\"countyreal\",\n",
        "                 gname=\"G\",\n",
        "                 data=data2,\n",
        "                 base_period =\"varying\",\n",
        "                 control_group=\"notyettreated\",\n",
        "                 cband=FALSE)\n",
        "cs_o <- aggte(cs_res, type=\"group\")\n",
        "res_df <- cbind.data.frame(att=cs_o$overall.att, se=cs_o$overall.se, ci_low=cs_o$overall.att-1.96*cs_o$overall.se, ci_up=cs_o$overall.att+1.96*cs_o$overall.se)\n",
        "res_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "jQZCHUA0cwBp",
        "outputId": "88f11d14-336f-4fed-d026-5c872b95c04d"
      },
      "id": "jQZCHUA0cwBp",
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A data.frame: 1 × 4</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>att</th><th scope=col>se</th><th scope=col>ci_low</th><th scope=col>ci_up</th></tr>\n",
              "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>-0.0386915</td><td>0.005012009</td><td>-0.04851504</td><td>-0.02886796</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA data.frame: 1 × 4\n\n| att &lt;dbl&gt; | se &lt;dbl&gt; | ci_low &lt;dbl&gt; | ci_up &lt;dbl&gt; |\n|---|---|---|---|\n| -0.0386915 | 0.005012009 | -0.04851504 | -0.02886796 |\n\n",
            "text/latex": "A data.frame: 1 × 4\n\\begin{tabular}{llll}\n att & se & ci\\_low & ci\\_up\\\\\n <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t -0.0386915 & 0.005012009 & -0.04851504 & -0.02886796\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  att        se          ci_low      ci_up      \n",
              "1 -0.0386915 0.005012009 -0.04851504 -0.02886796"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "And do the same with covariates."
      ],
      "metadata": {
        "id": "gz7d3c8IdCCs"
      },
      "id": "gz7d3c8IdCCs"
    },
    {
      "cell_type": "code",
      "source": [
        "csX_res <- att_gt(yname=\"lemp\",\n",
        "                 tname=\"year\",\n",
        "                 idname=\"countyreal\",\n",
        "                 gname=\"G\",\n",
        "                 data=subset(data2, region !=1),\n",
        "                 xformla=~lpop + lavg_pay + region,\n",
        "                 base_period =\"varying\",\n",
        "                 control_group=\"notyettreated\")\n",
        "csX_o <- aggte(csX_res, type=\"group\", na.rm=TRUE)\n",
        "res_df <- cbind.data.frame(att=csX_o$overall.att, se=csX_o$overall.se, ci_low=csX_o$overall.att-1.96*csX_o$overall.se, ci_up=csX_o$overall.att+1.96*csX_o$overall.se)\n",
        "res_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "5MwWD-d-dBfx",
        "outputId": "4c37259a-bef1-422b-cd6e-f9dcef2a07ab"
      },
      "id": "5MwWD-d-dBfx",
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A data.frame: 1 × 4</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>att</th><th scope=col>se</th><th scope=col>ci_low</th><th scope=col>ci_up</th></tr>\n",
              "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>-0.02696072</td><td>0.005277686</td><td>-0.03730499</td><td>-0.01661646</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA data.frame: 1 × 4\n\n| att &lt;dbl&gt; | se &lt;dbl&gt; | ci_low &lt;dbl&gt; | ci_up &lt;dbl&gt; |\n|---|---|---|---|\n| -0.02696072 | 0.005277686 | -0.03730499 | -0.01661646 |\n\n",
            "text/latex": "A data.frame: 1 × 4\n\\begin{tabular}{llll}\n att & se & ci\\_low & ci\\_up\\\\\n <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t -0.02696072 & 0.005277686 & -0.03730499 & -0.01661646\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  att         se          ci_low      ci_up      \n",
              "1 -0.02696072 0.005277686 -0.03730499 -0.01661646"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Finally, there is also the imputation estimator by [Liu, Wang and Xu\n",
        "(2021)](https://doi.org/10.1111/ajps.12723). This estimator is slightly\n",
        "different than the procedure above. It first estimates a model for the\n",
        "potential outcomes of untreated units and then uses these “imputed\n",
        "outcomes” to compare them to the actual observed ones."
      ],
      "metadata": {
        "id": "FRPdTGvWdHmJ"
      },
      "id": "FRPdTGvWdHmJ"
    },
    {
      "cell_type": "code",
      "source": [
        "imp <- did_imputation(yname=\"lemp\",\n",
        "            tname=\"year\",\n",
        "            idname=\"countyreal\",\n",
        "            gname=\"G\",\n",
        "            data=data2)\n",
        "imp"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "WnVSfp4-dHTC",
        "outputId": "bfbab040-29f9-426a-f198-a72b1cc62d0e"
      },
      "id": "WnVSfp4-dHTC",
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A tibble: 1 × 6</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>lhs</th><th scope=col>term</th><th scope=col>estimate</th><th scope=col>std.error</th><th scope=col>conf.low</th><th scope=col>conf.high</th></tr>\n",
              "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>lemp</td><td>treat</td><td>-0.04202317</td><td>0.005770332</td><td>-0.05333302</td><td>-0.03071332</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA tibble: 1 × 6\n\n| lhs &lt;chr&gt; | term &lt;chr&gt; | estimate &lt;dbl&gt; | std.error &lt;dbl&gt; | conf.low &lt;dbl&gt; | conf.high &lt;dbl&gt; |\n|---|---|---|---|---|---|\n| lemp | treat | -0.04202317 | 0.005770332 | -0.05333302 | -0.03071332 |\n\n",
            "text/latex": "A tibble: 1 × 6\n\\begin{tabular}{llllll}\n lhs & term & estimate & std.error & conf.low & conf.high\\\\\n <chr> & <chr> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t lemp & treat & -0.04202317 & 0.005770332 & -0.05333302 & -0.03071332\\\\\n\\end{tabular}\n",
            "text/plain": [
              "  lhs  term  estimate    std.error   conf.low    conf.high  \n",
              "1 lemp treat -0.04202317 0.005770332 -0.05333302 -0.03071332"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The estimates are overall very similar to the TWFE regression estimates\n",
        "and all suggest a significantly negative influence of minimum wages on\n",
        "teen employment\n",
        "\n",
        "**Event Study Regression**\n",
        "\n",
        "The regressions so far focused on a single target parameter, interpreted\n",
        "as “the” causal effect. Another common target parameter is the event\n",
        "study which estimates $ATT^{ES}(e)$ with $e$ being the proximity to the\n",
        "treatment in time-periods ($e=0$ is the first post-treatment period) .\n",
        "This is particularly useful to understand treatment effect dynamics,\n",
        "i.e. how the effect of participating in the treatment varies with length\n",
        "of exposure. Event Studies are also useful to test if the parallel trend\n",
        "assumption holds. If we estimate $ATT^{ES}(e=\\tilde{e}<0)\\neq 0$, this\n",
        "might be not the case."
      ],
      "metadata": {
        "id": "M0bDHuc3dOK0"
      },
      "id": "M0bDHuc3dOK0"
    },
    {
      "cell_type": "code",
      "source": [
        "cs_dyn <- aggte(cs_res, type=\"dynamic\")\n",
        "plot_df1 <- cbind.data.frame(att=cs_dyn$att.egt, ciL=cs_dyn$att.egt-1.96*cs_dyn$se.egt, ciU=cs_dyn$att.egt+1.96*cs_dyn$se.egt, e=cs_dyn$egt, type=\"CS\")\n",
        "\n",
        "this_data <- data2\n",
        "this_data$e <- ifelse(this_data$G==0, 0, this_data$year - this_data$G)\n",
        "twfe_es <- feols(lemp ~ i(e, ever_treated, ref=-1) | countyreal + year,\n",
        "                 data=this_data)\n",
        "\n",
        "twfe_plot_data <- iplot(twfe_es)\n",
        "plot_df2 <- cbind.data.frame(att=twfe_plot_data$prms$estimate,\n",
        "                             ciL=twfe_plot_data$prms$ci_low,\n",
        "                             ciU=twfe_plot_data$prms$ci_high,\n",
        "                             e=twfe_plot_data$prms$estimate_names,\n",
        "                             type=\"ES Reg. Data 2\")\n",
        "\n",
        "\n",
        "data$e <- ifelse(data$G==0, 0, data$year - data$G)\n",
        "twfe_es_all <- feols(lemp ~ i(e, ever_treated, ref=-1) | countyreal + year,\n",
        "                 data=data)\n",
        "twfe_all_plot_data <- iplot(twfe_es_all)\n",
        "plot_df3 <- cbind.data.frame(att=twfe_all_plot_data$prms$estimate,\n",
        "                             ciL=twfe_all_plot_data$prms$ci_low,\n",
        "                             ciU=twfe_all_plot_data$prms$ci_high,\n",
        "                             e=twfe_all_plot_data$prms$estimate_names,\n",
        "                             type=\"ES Reg. Data 1\")\n",
        "\n",
        "plot_df <- rbind.data.frame(plot_df1, plot_df2, plot_df3)\n",
        "\n",
        "ggplot(data=plot_df, mapping=aes(x=e,y=att,color=type,fill=type)) +\n",
        "  geom_point(position=position_dodge(width=.2)) +\n",
        "  geom_errorbar(aes(ymin=ciL, ymax=ciU), position=position_dodge(width=.2), width=.5) +\n",
        "  theme_classic() +\n",
        "  scale_x_continuous(breaks=seq(-6,6)) +\n",
        "  theme(legend.position=\"bottom\", legend.title=element_blank())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 857
        },
        "id": "Hn0tLfLJdUkx",
        "outputId": "6203c9cb-edc4-47b7-b6d1-2b2da874d2ad"
      },
      "id": "Hn0tLfLJdUkx",
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Plot with title “Effect on lemp”"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAADAFBMVEUAAAABAQECAgIDAwME\nBAQFBQUGBgYHBwcICAgJCQkKCgoLCwsMDAwNDQ0ODg4PDw8QEBARERESEhITExMUFBQVFRUW\nFhYXFxcYGBgZGRkaGhobGxscHBwdHR0eHh4fHx8gICAhISEiIiIjIyMkJCQlJSUmJiYnJyco\nKCgpKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEyMjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6\nOjo7Ozs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERFRUVGRkZHR0dISEhJSUlKSkpLS0tM\nTExNTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dYWFhZWVlaWlpbW1tcXFxdXV1e\nXl5fX19gYGBhYWFiYmJjY2NkZGRlZWVmZmZnZ2doaGhpaWlqampra2tsbGxtbW1ubm5vb29w\ncHBxcXFycnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn5/f3+AgICBgYGC\ngoKDg4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OU\nlJSVlZWWlpaXl5eYmJiZmZmampqbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWm\npqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4\nuLi5ubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnK\nysrLy8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dna2trb29vc\n3Nzd3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+fo6Ojp6enq6urr6+vs7Ozt7e3u\n7u7v7+/w8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v8/Pz9/f3+/v7////i\nsF19AAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElEQVR4nO2dCZwU5Z2/3wGG4QyOInLI5bFs\nogmX67FKwgqKRhFNdlT0nwVBh0VNiKIZNUY8ohAwGhNNiMaYRMmuiOTyL5pRNCFK5IgmGkhE\nMIIBzxmVYziGqe3qnguZqV/PW+9bVW/183w+dNfQ9fZbc3ynu575VpXyACA0Ku4NAEgDBAnA\nAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAE\nCcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnA\nAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAEKUYWjujU+bAdTfcm\neUSpErPPCEEQpMi4TzVjWuY//phd2tp4bxSCFC0EKTL2C9I0pXrc+bPdjfet81Z7tbaNsxGk\naCFIkeEH6fMT6vlB5j9Oz+Wp8b51vqsIUsIhSJHhB6m6+X+MUWpm8/vWOZEgJR2CFBkfC9K0\n+jd5F9bfZ/aR/jbtiJLux9y1J/v4m1d8skunT1W843ln5FaY0TT2w1uPKy3udeqPa/0P7ldq\nlPf7sQd0Pamy2WyNQWr2pNk1HxnWeeDXd3trxh/Q9ZRXMv/5I6U+5T184ie6j33O8hcg1RCk\nyBCD9Gin3NLJNZmHl/bIfXDIX/YP0kv96sec8F7mo/9V6ugnO/oftn+q6ekbgtT8Sf01Fxb5\nH122oad/d/AHnveQUn3nZVfp8GREX4k0QpAi42NBem3ZMUqdv2zZq/X3ezd0Vurqv6/8nFLX\net6WA5X63KKHhik1ZM9ff5UZuWDZhoaRVZkcDf7BLys6KHWGl41Mn0HDrj01s9KxTU9fH6R9\nntRf89CzLs9EtOT0vjOOywy40/MeznxUMul/buum1MAg4QGBEKTIaC4bLvH/42P7SJcrNTpz\n92431b3Gu1apnts9751MDhZ5W9Q++0g3KfWJf2buH8z896psPNSozOtN5qWtXVMS6oO0z5P6\na5ZlXqQyd53We7uGKDU+N3yKl325UrwkaUOQIqO5/h7o/8fHgnS4Ul+vyfBZpZ7yjlbqYv+x\n55YsWffxIA1VarJ/X1uq1M25JCzNfPhU5v4fjSvVB2mfJ/XXXOF5u0uUmph57CqlhuWGv5T5\naE93pW6M5AuRSghSZAhBqmvX9PBdde2Vmt04ct8g1WXe0n07u3RCNhB+Ej7KfLQuc/9y41q5\nIO3zpNk1/QLFobkn/7ZSh2dXLN7rjxiu1EW2vwbphSBFhqC/tzXL2Sz/g/mNK+4bJP+xH2aX\nxip1ZpNW2NRCkPZ50sY1My9T/t+xvtcQpAOyI05S6jw7n3khQJAiQwiS/yL0nYaH9rZreNXx\n2f8VaV526TilLgwO0j5P2mqQcp58eG5fCbQgSJEh/UH2X5ob7iH1+0gLbrllycf3kYZl85PZ\n18ns1XwrOEj7PmlrQVLrMh/t6Zbd4wI9CFJkSEH6slJ9t3te7QUXXfOmd4VSPT/wvKpSpe7z\n3sqMXNY07malum7K3N+rVNHfhSDt86StBukaL+fyltr9CqQZghQZ+3TtJny0X5DWd1bqxP//\n5BeUOqrWeyPzanPcwwtGKjVgm1dbrNSohY1uuvpQpY6459GrS3KvWoFB2udJWwtSh+JZz3z/\nIKWG1Eb45UgZBCky9ml/q3f379o9UpJ7qJ//Nu6xLrkPevtq+nR/6YzGZ2psNnzB70AEBmmf\nJ20tSKXXZFfpREdIH4IUGWKQvDVTBpd0OfrrVdkPNkw/snPno659119+8+wDOg2+tempPvzm\nv/Uo7nPOr7MfBAep+ZO2FqSu3g+HdSo9689WP/2UQ5AKHWriRiBIhQ5BMgJBKnQIkhEIUqFD\nkIxAkAodgmQEggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACC\nBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRg\nAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRggAiC9NIqAKd4qe0/5faDtFIB\nOMbKNv+Y2w/Sc2qX9TkADLJLPdfmMXEGaVcMCavbFv2c3va90c+5Z2f0c3pbY5hzR63xp3Qt\nSGvXWp98P6qfjX5O7/m3o59z/V+in3P70j3RT7pqk/GndC1If/ub9cn3I54gvaM78r9u1x25\noWCC9Kbxp3QtSHti+LJ7NXHMWac78vQK3ZG1ceyZ7ohhzp3m3ze7FiQQ0Q8S6ONakJANIvpB\nQjbo41qQkA0i+kFCNujjWpCQDSITvqE7Etmgj2tBQjaIvK39ZgnZoI9rQQJIJK4FCdlgEWSD\nPq4FCdlgEWSDPq4FCdkgQrNBBNmAbJCh2SCCbAAZmg1x4FqQkA0iNBtEkA3IBhmaDSLIBmSD\nDM0GEWQDskGGZoMIsgEgmTgVpOWVlQsWVFYutz7/vjgmG/RBNujjUpB29i8t7dixtLR/xN9v\n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\nUIu8WL70z3Y8Kaqzcq1Wl2Xv56nFEc3YQISfZJbYvpv7EUeQqqdlmOd5JeqnmY82d+tt/gLv\nrc759oFnepF96Rsm9fl5yYj3I5nU84N0efZ+rvpFVFPmiPKT9In0uxlMHEHa5F83OvNW+qD2\n2/0Py1QExrRhzvO7vRHdl75h0sw++A3qtI8imdNnnZqUvb9ePRXZnF7Un6RPpN/NYOJ8azey\nve95vEtVdH9Ielx9Y9OmTX9VEzdFKjnqpqgvR/Cy28CuDqOz9xPVG9FNGvUn6cX23WyROIN0\nufqjf3eq2hjZlDNVAxWRzZlhhrotyum847r4r/V7+/aPctKoP8nYvpstEmeQVhWdvNPzVrb7\nTHRTrvmNz/+qU3+zNrpJvUfVjAhny3CvujFz+wN1U4RzRv5JxvXdbJlYK0JfVcNuuqRzx2ei\nnjfqd9WHqy9XZImqslM7Sk246fyiT2+PaD6fyD/JBthH8urmD+3U4/MrIp836i994zuQ16Oa\ncetVA4v7XRapQYv+k6yHIAGkBoIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRg\nAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACC\nBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRgAIIEYACCBGAAggRg\nAILkKm9dOqC454ToLwkPLUKQHOWdgT0qHrzt0JJn494QyEKQHGV6h5WZ243dj4l7QyALQXKT\nup4jtviMU1vj3hTwIUhu8pZq4K9xbwr4ECQ3WaeGLclRHfemgA9BcpO31LC4NwGaQ5AcpWen\n7EvRO3FvB+QgSI4yXV2XuX2n95lxbwhkIUiO8vYAddFPbhtQ/Nu4NwSyECRX2TK9f4cDznoh\n7s2AHAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJ\nwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAABAnAAAQJwAAECcAA\nBAnAAAQJwAAECcAABAnAAAQJwAD/B7dRxA7Zrzy2AAAAAElFTkSuQmCC"
          },
          "metadata": {
            "image/png": {
              "width": 420,
              "height": 420
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "plot without title"
            ],
            "image/png": "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"
          },
          "metadata": {
            "image/png": {
              "width": 420,
              "height": 420
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "While we see, that the estimates in the first post-treatment period are\n",
        "very similar across methods and sub-datasets, the more periods we move\n",
        "away from treatment, the less certain the estimates are.\n",
        "\n",
        "**Sensitivity Analysis**\n",
        "\n",
        "The result of the event study above also suggest that there appear to be\n",
        "some violations of parallel trends in pre-treatment periods (e.g. at\n",
        "$e=-2$, all estimates are significantly different from 0). That would be\n",
        "a limitation to effect identification with DiD. We perform a sensitivity\n",
        "analysis with the methodology of [Rambachan and Roth\n",
        "(2022)](https://doi.org/10.1093/restud/rdad018), namely we specify\n",
        "different values for `Mbarvec` which is an assumption on how bad the\n",
        "post-treatment violation of parallel trends can be. We then get\n",
        "confidence bands for the treatment effect parameter. We perform\n",
        "sensitivity analysis for the first post-treatment period."
      ],
      "metadata": {
        "id": "6RCdagS2dXdW"
      },
      "id": "6RCdagS2dXdW"
    },
    {
      "cell_type": "code",
      "source": [
        "remotes::install_github(\"asheshrambachan/HonestDiD\")\n",
        "library(HonestDiD)\n",
        "\n",
        "# redo event study with universal base period\n",
        "cs_res <- att_gt(yname=\"lemp\",\n",
        "                 tname=\"year\",\n",
        "                 idname=\"countyreal\",\n",
        "                 gname=\"G\",\n",
        "                 data=data2,\n",
        "                 base_period =\"universal\",\n",
        "                 control_group=\"nevertreated\",\n",
        "                 cband=FALSE)\n",
        "cs_dyn <- aggte(cs_res, type=\"dynamic\")\n",
        "\n",
        "hd_rm <- honest_did(es=cs_dyn,\n",
        "                    type=\"relative_magnitude\",\n",
        "                    Mbarvec=c(0.5,1,1.5,2),\n",
        "                    gridPoints=100,\n",
        "                    grid.lb=-.25,\n",
        "                    grid.ub=.25,\n",
        "                    e=0)\n",
        "\n",
        "createSensitivityPlot_relativeMagnitudes(hd_rm$robust_ci,\n",
        "                                         hd_rm$orig_ci) +\n",
        "  theme_classic() +\n",
        "  scale_color_discrete(\"\", labels=c(\"Original\", \"RR Bounds\")) +\n",
        "  theme(legend.position=\"bottom\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "ljk3NjuNdcIf",
        "outputId": "e723f7b8-40e2-4fcd-8845-c11f00fd10dd"
      },
      "id": "ljk3NjuNdcIf",
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Downloading GitHub repo asheshrambachan/HonestDiD@HEAD\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "gmp   (NA -> 0.7-2 ) [CRAN]\n",
            "Rmpfr (NA -> 0.9-3 ) [CRAN]\n",
            "Rglpk (NA -> 0.6-5 ) [CRAN]\n",
            "CVXR  (NA -> 1.0-11) [CRAN]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Installing 4 packages: gmp, Rmpfr, Rglpk, CVXR\n",
            "\n",
            "Installing packages into ‘/usr/local/lib/R/site-library’\n",
            "(as ‘lib’ is unspecified)\n",
            "\n",
            "Warning message in i.p(...):\n",
            "“installation of package ‘gmp’ had non-zero exit status”\n",
            "Warning message in i.p(...):\n",
            "“installation of package ‘Rglpk’ had non-zero exit status”\n",
            "Warning message in i.p(...):\n",
            "“installation of package ‘Rmpfr’ had non-zero exit status”\n",
            "Warning message in i.p(...):\n",
            "“installation of package ‘CVXR’ had non-zero exit status”\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[36m──\u001b[39m \u001b[36mR CMD build\u001b[39m \u001b[36m─────────────────────────────────────────────────────────────────\u001b[39m\n",
            "* checking for file ‘/tmp/Rtmp4NFGTV/remotesa12654935a/asheshrambachan-HonestDiD-bb2c7b6/DESCRIPTION’ ... OK\n",
            "* preparing ‘HonestDiD’:\n",
            "* checking DESCRIPTION meta-information ... OK\n",
            "* checking for LF line-endings in source and make files and shell scripts\n",
            "* checking for empty or unneeded directories\n",
            "* building ‘HonestDiD_0.2.5.tar.gz’\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Installing package into ‘/usr/local/lib/R/site-library’\n",
            "(as ‘lib’ is unspecified)\n",
            "\n",
            "Warning message in i.p(...):\n",
            "“installation of package ‘/tmp/Rtmp4NFGTV/filea139dac9a/HonestDiD_0.2.5.tar.gz’ had non-zero exit status”\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ERROR",
          "evalue": "ignored",
          "traceback": [
            "Error in library(HonestDiD): there is no package called ‘HonestDiD’\nTraceback:\n",
            "1. library(HonestDiD)"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The results indicate that the earlier conclusions are robust (in the\n",
        "sense of being statistically different from 0) to violations of parallel\n",
        "trends only up to half as large as were observed in pre-treatment\n",
        "periods. Allowing for violations of parallel trends as large as were\n",
        "observed in pre-treatment periods, the confidence set ranges from -0.073\n",
        "to 0.023. This could imply a wide range of multiple effects of minimum\n",
        "wage on teen employment, including no effect."
      ],
      "metadata": {
        "id": "VGhJq3Urdl8F"
      },
      "id": "VGhJq3Urdl8F"
    }
  ],
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "ir",
      "display_name": "R"
    },
    "language_info": {
      "name": "R"
    }
  }
}